{"version":3,"sources":["./src/app/teacher/subject-student/add-student/add-student.component.ts","./src/app/teacher/subject-student/add-student/add-student.component.html","./src/app/teacher/subject-student/subject-student.module.ts","./src/app/teacher/subject-student/students/students.component.ts","./src/app/teacher/subject-student/students/students.component.html","./src/app/teacher/subject-student/subject-student-routing.module.ts"],"names":[],"mappings":"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","file":"subject-student-subject-student-module-es2015.js","sourcesContent":["import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { Student } from 'src/app/core/models';\nimport { SubjectService } from '../../services/subject.service';\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\nexport class AddStudentComponent implements OnDestroy {\n  @ViewChild('input') public input!: ElementRef;\n\n  public inputSubscription!: Subscription;\n  public students$!: Observable<Array<Student>>;\n  public subjectId: string | null;\n  public selectedStudent!: Student | null;\n  @Output() public newStudentEvent = new EventEmitter<void>();\n\n\n  constructor(\n    private readonly subjectService: SubjectService,\n    private readonly route: ActivatedRoute,\n  ) { \n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  public ngAfterViewInit() {\n    this.inputSubscription = fromEvent(this.input.nativeElement, 'keyup')\n    .subscribe(() => {\n      const criterion = this.input.nativeElement.value;\n      this.students$ = this.subjectService.searchStudents(this.subjectId, criterion);\n    });\n  }\n\n  public selectStudent(student: Student): void {\n    this.selectedStudent = student;\n  }\n\n  public deselectStudent(): void {\n    this.selectedStudent = null;\n  }\n\n  public submitStudent(): void {\n\n    if(!this.selectedStudent) { \n      return;\n    }\n\n    this.subjectService.addStudentToSubject(this.subjectId, this.selectedStudent.id).subscribe(data => {\n      this.selectedStudent = null;\n      this.newStudentEvent.emit();\n    });\n\n  }\n\n  public ngOnDestroy() {\n    this.inputSubscription!.unsubscribe();\n  }\n}\n","<div>\n\n        <form>\n            <h1>Add student</h1>\n            <div>\n\n                <div [hidden]=\"selectedStudent\">\n                    <input placeholder=\"Search by email or faculty number\" #input class=\"blue-input\">\n    \n                    <ul class=\"search-result-list box-shadow\">\n                        <ng-container *ngFor=\"let student of students$ | async\">\n                            <li class=\"hover\" (click)=\"selectStudent(student)\">\n                                <div>{{student.email}}</div>\n                                <div>{{student.facultyNumber}}</div>\n                            </li>\n                        </ng-container>\n                    </ul>\n                </div>\n\n                <div *ngIf=\"selectedStudent\">\n                    <div class=\"selected-result box-shadow\">\n                        <p>{{selectedStudent.username}}</p>\n                        <p>{{selectedStudent.email}}@outlook.com</p>\n                    </div>\n                    <button id=\"cancel\" class=\"hover white-button\" (click)=\"deselectStudent()\">Cancel</button>\n                </div>\n\n            </div>\n\n            <button id=\"add\" class=\"hover form-blue-button submit-button\" type=\"button\" (click)=\"submitStudent()\"\n            [disabled]=\"!selectedStudent\">\n            Add\n        </button>\n        </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StudentsComponent } from '../subject-student/students/students.component';\nimport { AddStudentComponent } from '../subject-student/add-student/add-student.component';\n\nimport { SubjectStudentRoutingModule } from './subject-student-routing.module';\n\n\n@NgModule({\n  declarations: [\n    StudentsComponent,\n    AddStudentComponent\n  ],\n  imports: [\n    CommonModule,\n    SubjectStudentRoutingModule\n  ]\n})\nexport class SubjectStudentModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { Student, Subject } from 'src/app/core/models';\nimport { SubjectService } from '../../services/subject.service';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit {\n  public students$!: Observable<Array<Student>>;\n  public refreshedStudents$ = new BehaviorSubject<boolean>(true);\n  public subject$!: Observable<Subject>;\n  public subjectId: string | null;\n\n  constructor\n    (\n      private readonly subjectService: SubjectService,\n      private readonly route: ActivatedRoute,\n  ) {\n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  public ngOnInit(): void {\n    this.subject$ = this.subjectService.getSubject(this.subjectId);\n    this.students$ = this.refreshedStudents$.\n      pipe(switchMap(_ => this.subjectService.getSubjectStudents(this.subjectId)));\n  }\n\n  public refreshStudents(): void {\n    this.refreshedStudents$.next(true);\n  }\n\n  public removeStudentFromSubject(studentId: number): void {\n    this.subjectService.removeStudentFromSubject(this.subjectId, studentId)\n      .pipe(take(1))\n      .subscribe(() => {\n        this.refreshStudents();\n      });\n\n  }\n\n}\n","<ng-container *ngIf=\"subject$ | async as subject\">\n\n    <div class=\"page-wrapper\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <h2> {{subject.name | uppercase}}</h2>\n            </div>\n        </nav>\n\n        <div class=\"half-flex-container\">\n\n            <div class=\"half-flex-item left\">\n                <h2>Students</h2>\n\n                <ng-container *ngIf=\"(students$ | async) as students\">\n                    <ng-container *ngIf=\"students.length !== 0; else empty\">\n                        <table class=\"info-table\">\n                            <thead>\n                                <th>Email</th>\n                                <th>Faculty number</th>\n                                <th>Action</th>\n                            </thead>\n\n                            <tbody>\n                                <tr *ngFor=\"let student of students\">\n                                    <td data-label=\" Email\">{{student.email}}</td>\n                                    <td data-label=\"Faculty number\">{{student.facultyNumber}}</td>\n                                    <td data-label=\"Action\" (click)=\"removeStudentFromSubject(student.id)\">Remove</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #empty>\n                    <p id=\"empty\">No students have been added to this subject yet.</p>\n                </ng-template>\n\n            </div>\n\n            <div class=\"half-flex-item right box-shadow\">\n                <app-add-student (newStudentEvent)=\"refreshStudents()\"></app-add-student>\n            </div>\n\n        </div>\n    </div>\n\n</ng-container>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StudentsComponent } from './students/students.component';\n\nconst routes: Routes = [\n  { path: '', children: [\n    { path: '', component: StudentsComponent, pathMatch: 'full'}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SubjectStudentRoutingModule { }\n"],"sourceRoot":"webpack:///"}