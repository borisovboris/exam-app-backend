{"version":3,"sources":["webpack:///src/app/shared/services/student-answer.service.ts","webpack:///src/app/teacher/services/topic.service.ts","webpack:///src/app/teacher/services/student-exam.service.ts"],"names":["StudentAnswerService","http","baseUrl","API_ENDPOINT","studentAnswerText","studentExamId","sessionQuestionId","post","earnedPoints","studentAnswerId","TopicService","name","subjectId","topicId","patch","get","StudentExamService"],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaA,oB;AAEX,sCAEmBC,IAFnB,EAEmC;AAAA;;AAAhB,eAAAA,IAAA,GAAAA,IAAA;AAHF,eAAAC,OAAA,aAAqB,sEAAYC,YAAjC;AAIZ;;;;iBAEE,oBACLC,iBADK,EAELC,aAFK,EAGLC,iBAHK,EAGoB;AAEzB,mBAAO,KAAKL,IAAL,CAAUM,IAAV,WAAwB,KAAKL,OAA7B,mBAAoD;AACzDE,+BAAiB,EAAjBA,iBADyD;AAEzDC,2BAAa,EAAbA,aAFyD;AAGzDC,+BAAiB,EAAjBA;AAHyD,aAApD,CAAP;AAKD;;;iBAEM,sBAAaE,YAAb,EAAmCC,eAAnC,EAA0D;AAC/D,mBAAO,KAAKR,IAAL,CAAUM,IAAV,WAAwB,KAAKL,OAA7B,cACP;AAAEM,0BAAY,EAAZA,YAAF;AAAgBC,6BAAe,EAAfA;AAAhB,aADO,CAAP;AAED;;;;;;;yBAtBUT,oB,EAAoB,uH;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFnB;;;;;;;;;;;;;;;;;ACHd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaU,Y;AAIX,8BACmBT,IADnB,EACmC;AAAA;;AAAhB,eAAAA,IAAA,GAAAA,IAAA;AAHF,eAAAC,OAAA,aAAqB,sEAAYC,YAAjC;AAIZ;;;;iBAEL,qBAAYQ,IAAZ,EAA0BC,SAA1B,EAAwC;AACtC,mBAAO,KAAKX,IAAL,CAAUM,IAAV,WAAwB,KAAKL,OAA7B,WAA4C;AAAES,kBAAI,EAAJA,IAAF;AAAQC,uBAAS,EAATA;AAAR,aAA5C,CAAP;AACD;;;iBAED,mBAAUC,OAAV,EAAwBF,IAAxB,EAAoC;AAClC,mBAAO,KAAKV,IAAL,CAAUa,KAAV,WAAyB,KAAKZ,OAA9B,cAAyCW,OAAzC,GAAoD;AAAEF,kBAAI,EAAJA;AAAF,aAApD,CAAP;AACD;;;iBAED,kBAASE,OAAT,EAAqB;AACnB,mBAAO,KAAKZ,IAAL,CAAUc,GAAV,WAAwB,KAAKb,OAA7B,cAAwCW,OAAxC,EAAP;AACD;;;iBAED,2BAAkBA,OAAlB,EAA8B;AAC5B,mBAAO,KAAKZ,IAAL,CAAUc,GAAV,WAAkC,KAAKb,OAAvC,cAAkDW,OAAlD,gBAAP;AACD;;;iBAED,qBAAYA,OAAZ,EAAwB;AACtB,mBAAO,KAAKZ,IAAL,qBAA0B,KAAKC,OAA/B,cAA0CW,OAA1C,EAAP;AACD;;;;;;;yBA1BUH,Y,EAAY,uH;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;;;;;;;;;;;;;ACJd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaM,kB;AAGX,oCAEmBf,IAFnB,EAEmC;AAAA;;AAAhB,eAAAA,IAAA,GAAAA,IAAA;AAJF,eAAAC,OAAA,aAAqB,sEAAYC,YAAjC;AAKb;;;;iBAEG,wCAA+BE,aAA/B,EAAiD;AACtD,mBAAO,KAAKJ,IAAL,CAAUc,GAAV,WAAsB,KAAKb,OAA3B,cAAsCG,aAAtC,cAAP;AACD;;;iBAEM,wCAA+BA,aAA/B,EAAiD;AACtD,mBAAO,KAAKJ,IAAL,CAAUc,GAAV,WAAsB,KAAKb,OAA3B,cAAsCG,aAAtC,cAAP;AACD;;;iBAEM,wBAAeA,aAAf,EAAiC;AACtC,mBAAO,KAAKJ,IAAL,CAAUc,GAAV,WAA8B,KAAKb,OAAnC,cAA8CG,aAA9C,EAAP;AACD;;;;;;;yBAlBUW,kB,EAAkB,uH;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB","file":"common-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentAnswerService {\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/student-answers`;\n  constructor\n  (\n    private readonly http: HttpClient\n  ) { }\n\n  public giveAnswer(\n    studentAnswerText: string, \n    studentExamId: number, \n    sessionQuestionId: number\n    ): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/give-answer`, {\n      studentAnswerText,\n      studentExamId,\n      sessionQuestionId\n    });\n  }\n\n  public assessAnswer(earnedPoints: number, studentAnswerId: number): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/assess`, \n    { earnedPoints, studentAnswerId });\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\nimport { Question, Topic } from 'src/app/core/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopicService {\n\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/topics`;\n\n  constructor(\n    private readonly http: HttpClient\n  ) { }\n\n  createTopic(name: string, subjectId: any): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/add`, { name, subjectId })\n  }\n\n  editTopic(topicId: any, name: string): Observable<void> {\n    return this.http.patch<void>(`${this.baseUrl}/${topicId}`, { name });\n  }\n\n  getTopic(topicId: any): Observable<Topic> {\n    return this.http.get<Topic>(`${this.baseUrl}/${topicId}`);\n  }\n\n  getTopicQuestions(topicId: any): Observable<Array<Question>> {\n    return this.http.get<Array<Question>>(`${this.baseUrl}/${topicId}/questions`)\n  }\n\n  deleteTopic(topicId: any): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${topicId}`);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\nimport { StudentExam } from 'src/app/core/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentExamService {\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/student-exams`;\n  \n  constructor\n  (\n    private readonly http: HttpClient\n  ) {}\n\n  public getStudentExamQuestionsTeacher(studentExamId: any): Observable<any> {\n    return this.http.get<any>(`${this.baseUrl}/${studentExamId}/teacher`);\n  }\n\n  public getStudentExamQuestionsStudent(studentExamId: any): Observable<any> {\n    return this.http.get<any>(`${this.baseUrl}/${studentExamId}/student`);\n  }\n\n  public getStudentExam(studentExamId: any): Observable<StudentExam> {\n    return this.http.get<StudentExam>(`${this.baseUrl}/${studentExamId}`);\n  }\n}\n"]}