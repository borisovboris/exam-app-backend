{"version":3,"sources":["./src/app/core/app-settings.ts","./src/app/teacher/services/subject.service.ts","./src/app/core/interceptors/index.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/shared/subject-list/subject-list.component.ts","./src/app/shared/subject-list/subject-list.component.html","./src/app/shared/services/auth.service.ts","./src/app/core/interceptors/http-error.interceptor.ts","./src/app/shared/shared.module.ts","./src/app/core/services/modal.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/interceptors/auth.interceptor.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export class AppSettings {\r\n    public static readonly API_ENDPOINT = 'http://localhost:5000';\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\nimport { Exam, Session, Student, Subject, Teacher, Topic } from 'src/app/core/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/subjects`;\n\n  constructor(\n    private readonly http: HttpClient,\n  ) { }\n\n  public searchStudents(subjectId: any, criterion: string): Observable<Array<Student>> {\n    return this.http.get<Array<Student>>(`${this.baseUrl}/${subjectId}/search-students/${criterion}`)\n  }\n\n  public addStudentToSubject(subjectId: any, studentId: number): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/add-student-to-subject`,\n      { studentId, subjectId });\n  }\n\n  public removeStudentFromSubject(subjectId: any, studentId: number): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/remove-student-from-subject`,\n      { studentId, subjectId });\n  }\n\n  public createSubject(name: string, description: string): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}`, { name, description });\n  }\n\n  public editSubject(subjectId: any, name: string, description: string): Observable<void> {\n      return this.http.patch<void>(`${this.baseUrl}/${subjectId}`, { name, description })\n  }\n\n  public getSubject(subjectId: any): Observable<Subject> {\n    return this.http.get<Subject>(`${this.baseUrl}/${subjectId}`);\n  }\n\n  public searchTeachers(subjectId:any, criterion: string): Observable<Array<Teacher>> {\n    return this.http.get<Array<Teacher>>(`${this.baseUrl}/${subjectId}/search-teachers/${criterion}`);\n  }\n\n  public getSubjectTeachers(subjectId: any): Observable<Array<Teacher>> {\n    return this.http.get<Array<Teacher>>(`${this.baseUrl}/${subjectId}/teachers`);\n  }\n\n  public getSubjectTopics(subjectId: any): Observable<Array<Topic>> {\n    return this.http.get<Array<Topic>>(`${this.baseUrl}/${subjectId}/topics`);\n  }\n\n  public addTeacherToSubject(teacherId: number, subjectId: any): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/add-teacher-to-subject`,\n      { teacherId, subjectId });\n  }\n\n  public removeTeacherFromSubject(teacherId: number, subjectId: any): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/remove-teacher-from-subject`,\n      { teacherId, subjectId });\n  }\n\n  public getSubjectStudents(subjectId: any): Observable<Array<Student>> {\n    return this.http.get<Array<Student>>(`${this.baseUrl}/${subjectId}/students`);\n  }\n\n  public getSubjectExams(subjectId: any): Observable<Array<Exam>> {\n    return this.http.get<Array<Exam>>(`${this.baseUrl}/${subjectId}/exams`);\n  }\n\n  public getSubjectSessions(subjectId: any): Observable<Array<Session>> {\n    return this.http.get<Array<Session>>(`${this.baseUrl}/${subjectId}/sessions`);\n  }\n\n  public deleteSubject(subjectId: any): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${subjectId}`);\n  }\n}\n","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptor } from './auth.interceptor';\r\nimport { HttpErrorInterceptor } from './http-error.interceptor';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true }\r\n];","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit{\n  occupation$!: Observable<any>;\n  \n  constructor\n  (\n    private readonly authService: AuthService,\n    private readonly router: Router\n  ) { }\n\n  public ngOnInit() {\n    this.occupation$ = this.authService.getUserOccupation().pipe(shareReplay());\n  }\n\n  public logout() {\n    this.authService.logout();\n    this.router.navigate(['random-url-to-refresh-the-page']).then(() => { this.router.navigate(['/home']); })\n  }\n\n}\n","<div class=\"page-wrapper\">\n    <ng-container *ngIf=\"!(occupation$ | async)\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <ng-container>\n                    <button class=\"hover blue-button\" routerLink=\"/auth/teacher-login\">\n                        Teacher login\n                    </button>\n                    <button class=\"hover blue-button\" routerLink=\"/auth/student-login\">\n                        Student login\n                    </button>\n                </ng-container>\n            </div>\n        </nav>\n    \n        <div class=\"flex-container\">\n                <div class=\"flex-item left\">\n                    <div class=\"box box-shadow\">\n                        <h2>Build exams with ease and connect with your students online</h2>\n                        <button id=\"register-teacher-btn\" class=\"hover register-btn\" routerLink=\"/auth/teacher-register\">\n                            Register as teacher\n                        </button>\n                    </div>\n                </div>\n                <div class=\"flex-item right\">\n                    <div class=\"box box-shadow\">\n                        <h2>Sign up now and ace all of your exams online</h2>\n                        <button id=\"register-student-btn\" class=\"hover register-btn\" routerLink=\"/auth/student-register\">\n                            Register as student\n                        </button>\n                    </div>\n                </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"(occupation$ | async) as data\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <button class=\"hover white-button\" (click)=\"logout()\">Logout</button>\n            </div>\n        </nav>\n    \n        <div class=\"flex-container\">  \n                <h1 *ngIf=\"data.occupation === 'teacher'\" routerLink=\"/teacher/subjects\" class=\"white-button hover view-subjects\" >\n                    Back to your subjects\n                </h1>\n                <h1 *ngIf=\"data.occupation === 'student'\" routerLink=\"/student/subjects\" class=\"white-button hover view-subjects\">\n                    Back to your subjects\n                </h1>\n        </div>\n    </ng-container>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Subject } from 'src/app/core/models';\nimport { SubjectService } from 'src/app/teacher/services/subject.service';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-subject-list',\n  templateUrl: './subject-list.component.html',\n  styleUrls: ['./subject-list.component.css']\n})\nexport class SubjectListComponent implements OnInit {\n\n  @Input() public subjects$!: Observable<Array<Subject>>;\n  @Output() public refreshSubjectsEvent = new EventEmitter<void>();\n  occupation!: string;\n  \n  constructor\n  (\n    readonly authService: AuthService,\n    private readonly subjectService: SubjectService,\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getUserOccupation()\n    .pipe(take(1))\n    .subscribe((data) => { \n      this.occupation = data.occupation;\n    });\n  }\n\n  deleteSubject(subjectId: number) {\n    this.subjectService.deleteSubject(subjectId)\n    .pipe(take(1))\n    .subscribe(() => {\n      this.refreshSubjectsEvent.emit();\n    });\n  }\n\n}\n","<div class=\"rectangle-flex-container\">\n\n    <div class=\"rectangle-flex-item hover box-shadow\" \n    id=\"add-subject\" routerLink=\"add\" *ngIf=\"occupation === 'teacher'\">\n        <div class=\"rectangle-content\">\n            <h3>\n                <i class=\"fas fa-plus\"></i>\n            </h3>\n        </div>\n    </div>\n\n    <div class=\"rectangle-flex-item hover box-shadow\" \n    *ngFor=\"let subject of subjects$ | async\" routerLink=\"{{subject.id}}\">\n        <div class=\"rectangle-content\">\n            <h3><b>{{ subject.name | uppercase }}</b></h3>\n            <h3>Created by: {{ subject.creator.username }}</h3>\n            <h3>on {{ subject.createdAt | date:'mediumDate'}}</h3>\n        </div>\n\n        <div *ngIf=\"occupation === 'teacher'\">\n            <div class=\"edit-strip\" routerLink=\"{{subject.id}}/edit\">\n                <p>Edit</p>\n            </div>\n            <div class=\"delete-strip\" (click)=\"deleteSubject(subject.id); $event.stopPropagation();\" >\n                <p>Delete</p>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AppSettings } from 'src/app/core/app-settings';\n\n// provided in the providers array of SharedModule, not tree-shakable\n@Injectable()\n\nexport class AuthService {\n\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/auth`;\n\n  constructor(private readonly http: HttpClient) { }\n\n  getUserOccupation() {\n    return this.http.get<any>(`${this.baseUrl}/get-occupation`);\n  }\n\n  public logout(): void {\n    localStorage.removeItem('token_id');\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { ModalService } from \"../services/modal.service\";\r\n\r\n@Injectable()\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n    \r\n    constructor\r\n    (\r\n        private readonly modalService: ModalService\r\n    ) {}\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        return next.handle(request).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                let errorMessage: string = '';\r\n                console.log(JSON.stringify(error));\r\n\r\n                if(error.error instanceof ErrorEvent) {\r\n                    // client-side error\r\n                    errorMessage = `Error: ${error.error.message}`;\r\n                } else {\r\n                    // server-side error \r\n                    errorMessage = `Error Code: ${error.status}\r\n                    \\nStatus Text: ${error.statusText}\r\n                    \\nMessage: ${error.error.message}`\r\n\r\n                    this.modalService.changeMessage(error.error.message);\r\n                }\r\n\r\n                // window.alert(errorMessage);\r\n                return throwError(errorMessage);\r\n            }) \r\n        ) as Observable<HttpEvent<any>>;\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubjectListComponent } from './subject-list/subject-list.component';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n\n\n@NgModule({\n  declarations: [SubjectListComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    SubjectListComponent\n  ],\n  // AuthService is not tree-shakable\n  providers: [\n    AuthService\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  private readonly messageSource = new Subject<string>();\n  public currentMessage = this.messageSource.asObservable();\n\n  constructor() { }\n\n  changeMessage(message: string) {\n    this.messageSource.next(message);\n  }\n\n}\n","<router-outlet></router-outlet>\n\n<div *ngIf=\"showModal\" class=\"modal box-shadow\">\n    <h3>{{modalMessage}}</h3>\n    <i class=\"far fa-times-circle hover close-cross\" (click)=\"showModal = false;\"></i>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ModalService } from './core/services/modal.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent implements OnInit {\n  title = 'exam-app';\n  public showModal: boolean = false;\n  public modalMessage!: string;\n\n  constructor\n  (\n    private readonly modalService: ModalService\n  ) {}\n  \n  ngOnInit() {\n    this.modalService.currentMessage.subscribe((message) => {\n      this.showModal = true;\n      this.modalMessage = message;\n    });\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { httpInterceptorProviders } from './core/interceptors';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    SharedModule,\n  ],\n  providers: [\n    httpInterceptorProviders,\n  ],\n  exports: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor() { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const tokenId = localStorage.getItem('token_id');\r\n\r\n        if (tokenId) {\r\n            const cloned = req.clone({\r\n                headers: req.headers.set(\r\n                    'Authorization',\r\n                    'Bearer ' + tokenId\r\n                )\r\n            });\r\n            return next.handle(cloned);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {path: 'teacher/subjects', loadChildren: () => import('./teacher/teacher.module').then(m => m.TeacherModule)},\n  {path: 'student/subjects', loadChildren: () => import('./student/student.module').then(m => m.StudentModule)},\n  {path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)}, \n  {path: 'home', component: HomeComponent},\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: '**', component: PageNotFoundComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}