{"version":3,"sources":["webpack:///src/app/teacher/subject-teacher/add-teacher/add-teacher.component.ts","webpack:///src/app/teacher/subject-teacher/add-teacher/add-teacher.component.html","webpack:///src/app/teacher/subject-teacher/subject-teacher.module.ts","webpack:///src/app/teacher/subject-teacher/subject-teacher-routing.module.ts","webpack:///src/app/teacher/subject-teacher/teachers/teachers.component.ts","webpack:///src/app/teacher/subject-teacher/teachers/teachers.component.html"],"names":["AddTeacherComponent","subjectService","route","router","subjectId","snapshot","paramMap","get","inputSubscription","input","nativeElement","subscribe","criterion","value","teachers$","searchTeachers","teacher","selectedTeacher","addTeacherToSubject","id","pipe","navigate","unsubscribe","submitTeacher","SubjectTeacherModule","routes","path","children","component","pathMatch","SubjectTeacherRoutingModule","forChild","TeachersComponent","refreshedTeachers$","subject$","getSubject","_","getSubjectTeachers","next","teacherId","removeTeacherFromSubject","refreshTeachers"],"mappings":"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","file":"subject-teacher-subject-teacher-module-es5.js","sourcesContent":["import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Teacher } from 'src/app/core/models';\nimport { SubjectService } from '../../services/subject.service';\nimport { TeacherService } from '../../services/teacher.service';\n\n@Component({\n  selector: 'app-add-teacher',\n  templateUrl: './add-teacher.component.html',\n  styleUrls: ['./add-teacher.component.css']\n})\nexport class AddTeacherComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('input') input!: ElementRef;\n\n  public inputSubscription!: Subscription;\n  public teachers$!: Observable<Array<Teacher>>;\n  public subjectId!: string | null;\n  public selectedTeacher!: Teacher | null;\n\n  constructor(\n    private readonly subjectService: SubjectService,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router\n  ) { \n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  public ngAfterViewInit(): void {\n\n    this.inputSubscription = fromEvent(this.input.nativeElement, 'keyup')\n    .subscribe(() => {\n      const criterion = this.input.nativeElement.value;\n      this.teachers$ = this.subjectService.searchTeachers(this.subjectId, criterion);\n    });\n\n  }\n\n  public selectTeacher(teacher: Teacher): void {\n    this.selectedTeacher = teacher;\n  }\n\n  public deselectTeacher(): void {\n    this.selectedTeacher = null;\n  }\n\n  public submitTeacher(): void {\n\n    if(!this.selectedTeacher) { \n      return;\n    }\n\n    this.subjectService.addTeacherToSubject(this.selectedTeacher.id, this.subjectId)\n    .pipe(take(1))\n    .subscribe(() => {\n      this.router.navigate([`/teacher/subjects/${this.subjectId}/teachers/`]);\n    });\n\n  }\n\n  public ngOnDestroy(): void {\n    this.inputSubscription!.unsubscribe();\n  }\n\n}\n","<div class=\"form-wrapper\">\n\n    <div class=\"center-form\">\n        <form class=\"form-box\">\n            <h1>Add teacher</h1>\n            <div>\n\n                <div [hidden]=\"selectedTeacher\">\n                    <input placeholder=\"Search by username or email\" #input class=\"blue-input\">\n\n                    <ul class=\"search-result-list box-shadow\">\n                        <ng-container *ngFor=\"let teacher of teachers$ | async\">\n                            <li class=\"hover\" (click)=\"selectTeacher(teacher)\">\n                                <div>{{teacher.username}}</div>\n                                <div>{{teacher.email}}</div>\n                            </li>\n                        </ng-container>\n                    </ul>\n                </div>\n\n                <div *ngIf=\"selectedTeacher\">\n                    <div class=\"selected-result box-shadow\">\n                        <p>{{selectedTeacher.username}}</p>\n                        <p>{{selectedTeacher.email}}</p>\n                    </div>\n                    <button id=\"cancel\" class=\"hover white-button\" (click)=\"deselectTeacher()\">Cancel</button>\n                </div>\n\n            </div>\n\n            <button class=\"hover bottom-button form-blue-button\" type=\"button\" (click)=\"submitTeacher()\"\n            [disabled]=\"!selectedTeacher\">\n            Add\n        </button>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SubjectTeacherRoutingModule } from './subject-teacher-routing.module';\nimport { AddTeacherComponent } from './add-teacher/add-teacher.component';\nimport { TeachersComponent } from './teachers/teachers.component';\n\n\n@NgModule({\n  declarations: [\n    AddTeacherComponent,\n    TeachersComponent\n  ],\n  imports: [\n    CommonModule,\n    SubjectTeacherRoutingModule\n  ]\n})\nexport class SubjectTeacherModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddTeacherComponent } from './add-teacher/add-teacher.component';\nimport { TeachersComponent } from './teachers/teachers.component';\n\nconst routes: Routes = [\n  { path: '', children: [\n    { path: 'add', component: AddTeacherComponent },\n    { path: '', component: TeachersComponent, pathMatch: 'full' },\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SubjectTeacherRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { Teacher } from 'src/app/core/models';\nimport { SubjectService } from '../../services/subject.service';\n\n@Component({\n  selector: 'app-teachers',\n  templateUrl: './teachers.component.html',\n  styleUrls: ['./teachers.component.css']\n})\nexport class TeachersComponent implements OnInit {\n  public subject$!: Observable<any>;\n  public teachers$!: Observable<Array<Teacher>>;\n  public refreshedTeachers$ = new BehaviorSubject<boolean>(true);\n  public subjectId: string | null;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly subjectService: SubjectService,\n  ) {\n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  public ngOnInit(): void {\n    this.subject$ = this.subjectService.getSubject(this.subjectId);\n    this.teachers$ = this.refreshedTeachers$\n      .pipe(switchMap(_ => this.subjectService.getSubjectTeachers(this.subjectId)));\n  }\n\n  public refreshTeachers(): void {\n    this.refreshedTeachers$.next(true);\n  }\n\n  public removeTeacherFromSubject(teacherId: number): void {\n    this.subjectService.removeTeacherFromSubject(teacherId, this.subjectId)\n      .pipe(take(1))\n      .subscribe(() => {\n        this.refreshTeachers();\n      });\n  }\n\n}\n","<ng-container *ngIf=\"subject$ | async as subject\">\n\n    <div class=\"page-wrapper\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <h2 id=\"heading\"> {{ subject.name | uppercase }}</h2>\n            </div>\n\n            <div class=\"button-nav\">\n                <button id=\"teachers\" class=\"hover blue-button\" routerLink=\"add\">Add teacher</button>\n            </div>\n        </nav>\n\n        <main class=\"page\">\n            <h2>Teachers</h2>\n\n            <table class=\"info-table\">\n                <thead>\n                    <th>Username</th>\n                    <th>Email</th>\n                    <th>Action</th>\n                </thead>\n                \n                <ng-container>\n                    <tbody>\n                        <tr *ngFor=\"let teacher of teachers$ | async\">\n                            <td data-label=\"Username\">{{teacher.username}}</td>\n                            <td data-label=\"Email\">{{teacher.email}}</td>\n                            <td data-label=\"Action\" (click)=\"removeTeacherFromSubject(teacher.id)\">Remove</td>\n                        </tr>\n                    </tbody>\n                </ng-container>\n            </table>\n\n        </main>\n    </div>\n</ng-container>"]}