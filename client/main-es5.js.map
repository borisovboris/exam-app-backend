{"version":3,"sources":["webpack:///src/app/core/app-settings.ts","webpack:///src/app/teacher/services/subject.service.ts","webpack:///src/app/core/interceptors/index.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/subject-list/subject-list.component.ts","webpack:///src/app/shared/subject-list/subject-list.component.html","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/core/interceptors/http-error.interceptor.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/core/services/modal.service.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/interceptors/auth.interceptor.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AppSettings","API_ENDPOINT","SubjectService","http","baseUrl","subjectId","criterion","get","studentId","post","name","description","patch","teacherId","httpInterceptorProviders","provide","useClass","multi","HomeComponent","authService","router","occupation$","getUserOccupation","pipe","logout","navigate","then","environment","production","$event","stopPropagation","SubjectListComponent","subjectService","refreshSubjectsEvent","subscribe","data","occupation","deleteSubject","emit","AuthService","localStorage","removeItem","HttpErrorInterceptor","modalService","request","next","handle","error","errorMessage","console","log","JSON","stringify","ErrorEvent","message","status","statusText","changeMessage","SharedModule","ModalService","messageSource","currentMessage","asObservable","AppComponent","title","showModal","modalMessage","AppModule","AuthInterceptor","req","tokenId","getItem","cloned","clone","headers","set","PageNotFoundComponent","routes","path","loadChildren","m","TeacherModule","StudentModule","AuthModule","component","redirectTo","pathMatch","AppRoutingModule","forRoot","bootstrapModule","err","webpackEmptyAsyncContext","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["export class AppSettings {\r\n    public static readonly API_ENDPOINT = 'http://localhost:5000';\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\nimport { Exam, Session, Student, Subject, Teacher, Topic } from 'src/app/core/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/subjects`;\n\n  constructor(\n    private readonly http: HttpClient,\n  ) { }\n\n  public searchStudents(subjectId: any, criterion: string): Observable<Array<Student>> {\n    return this.http.get<Array<Student>>(`${this.baseUrl}/${subjectId}/search-students/${criterion}`)\n  }\n\n  public addStudentToSubject(subjectId: any, studentId: number): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/add-student-to-subject`,\n      { studentId, subjectId });\n  }\n\n  public removeStudentFromSubject(subjectId: any, studentId: number): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/remove-student-from-subject`,\n      { studentId, subjectId });\n  }\n\n  public createSubject(name: string, description: string): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}`, { name, description });\n  }\n\n  public editSubject(subjectId: any, name: string, description: string): Observable<void> {\n      return this.http.patch<void>(`${this.baseUrl}/${subjectId}`, { name, description })\n  }\n\n  public getSubject(subjectId: any): Observable<Subject> {\n    return this.http.get<Subject>(`${this.baseUrl}/${subjectId}`);\n  }\n\n  public searchTeachers(subjectId:any, criterion: string): Observable<Array<Teacher>> {\n    return this.http.get<Array<Teacher>>(`${this.baseUrl}/${subjectId}/search-teachers/${criterion}`);\n  }\n\n  public getSubjectTeachers(subjectId: any): Observable<Array<Teacher>> {\n    return this.http.get<Array<Teacher>>(`${this.baseUrl}/${subjectId}/teachers`);\n  }\n\n  public getSubjectTopics(subjectId: any): Observable<Array<Topic>> {\n    return this.http.get<Array<Topic>>(`${this.baseUrl}/${subjectId}/topics`);\n  }\n\n  public addTeacherToSubject(teacherId: number, subjectId: any): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/add-teacher-to-subject`,\n      { teacherId, subjectId });\n  }\n\n  public removeTeacherFromSubject(teacherId: number, subjectId: any): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/remove-teacher-from-subject`,\n      { teacherId, subjectId });\n  }\n\n  public getSubjectStudents(subjectId: any): Observable<Array<Student>> {\n    return this.http.get<Array<Student>>(`${this.baseUrl}/${subjectId}/students`);\n  }\n\n  public getSubjectExams(subjectId: any): Observable<Array<Exam>> {\n    return this.http.get<Array<Exam>>(`${this.baseUrl}/${subjectId}/exams`);\n  }\n\n  public getSubjectSessions(subjectId: any): Observable<Array<Session>> {\n    return this.http.get<Array<Session>>(`${this.baseUrl}/${subjectId}/sessions`);\n  }\n\n  public deleteSubject(subjectId: any): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${subjectId}`);\n  }\n}\n","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptor } from './auth.interceptor';\r\nimport { HttpErrorInterceptor } from './http-error.interceptor';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true }\r\n];","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit{\n  occupation$!: Observable<any>;\n  \n  constructor\n  (\n    private readonly authService: AuthService,\n    private readonly router: Router\n  ) { }\n\n  public ngOnInit() {\n    this.occupation$ = this.authService.getUserOccupation().pipe(shareReplay());\n  }\n\n  public logout() {\n    this.authService.logout();\n    this.router.navigate(['random-url-to-refresh-the-page']).then(() => { this.router.navigate(['/home']); })\n  }\n\n}\n","<div class=\"page-wrapper\">\n    <ng-container *ngIf=\"!(occupation$ | async)\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <ng-container>\n                    <button class=\"hover blue-button\" routerLink=\"/auth/teacher-login\">\n                        Teacher login\n                    </button>\n                    <button class=\"hover blue-button\" routerLink=\"/auth/student-login\">\n                        Student login\n                    </button>\n                </ng-container>\n            </div>\n        </nav>\n    \n        <div class=\"flex-container\">\n                <div class=\"flex-item left\">\n                    <div class=\"box box-shadow\">\n                        <h2>Build exams with ease and connect with your students online</h2>\n                        <button id=\"register-teacher-btn\" class=\"hover register-btn\" routerLink=\"/auth/teacher-register\">\n                            Register as teacher\n                        </button>\n                    </div>\n                </div>\n                <div class=\"flex-item right\">\n                    <div class=\"box box-shadow\">\n                        <h2>Sign up now and ace all of your exams online</h2>\n                        <button id=\"register-student-btn\" class=\"hover register-btn\" routerLink=\"/auth/student-register\">\n                            Register as student\n                        </button>\n                    </div>\n                </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"(occupation$ | async) as data\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <button class=\"hover white-button\" (click)=\"logout()\">Logout</button>\n            </div>\n        </nav>\n    \n        <div class=\"flex-container\">  \n                <h1 *ngIf=\"data.occupation === 'teacher'\" routerLink=\"/teacher/subjects\" class=\"white-button hover view-subjects\" >\n                    Back to your subjects\n                </h1>\n                <h1 *ngIf=\"data.occupation === 'student'\" routerLink=\"/student/subjects\" class=\"white-button hover view-subjects\">\n                    Back to your subjects\n                </h1>\n        </div>\n    </ng-container>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Subject } from 'src/app/core/models';\nimport { SubjectService } from 'src/app/teacher/services/subject.service';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-subject-list',\n  templateUrl: './subject-list.component.html',\n  styleUrls: ['./subject-list.component.css']\n})\nexport class SubjectListComponent implements OnInit {\n\n  @Input() public subjects$!: Observable<Array<Subject>>;\n  @Output() public refreshSubjectsEvent = new EventEmitter<void>();\n  occupation!: string;\n  \n  constructor\n  (\n    readonly authService: AuthService,\n    private readonly subjectService: SubjectService,\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getUserOccupation()\n    .pipe(take(1))\n    .subscribe((data) => { \n      this.occupation = data.occupation;\n    });\n  }\n\n  deleteSubject(subjectId: number) {\n    this.subjectService.deleteSubject(subjectId)\n    .pipe(take(1))\n    .subscribe(() => {\n      this.refreshSubjectsEvent.emit();\n    });\n  }\n\n}\n","<div class=\"rectangle-flex-container\">\n\n    <div class=\"rectangle-flex-item hover box-shadow\" \n    id=\"add-subject\" routerLink=\"add\" *ngIf=\"occupation === 'teacher'\">\n        <div class=\"rectangle-content\">\n            <h3>\n                <i class=\"fas fa-plus\"></i>\n            </h3>\n        </div>\n    </div>\n\n    <div class=\"rectangle-flex-item hover box-shadow\" \n    *ngFor=\"let subject of subjects$ | async\" routerLink=\"{{subject.id}}\">\n        <div class=\"rectangle-content\">\n            <h3><b>{{ subject.name | uppercase }}</b></h3>\n            <h3>Created by: {{ subject.creator.username }}</h3>\n            <h3>on {{ subject.createdAt | date:'mediumDate'}}</h3>\n        </div>\n\n        <div *ngIf=\"occupation === 'teacher'\">\n            <div class=\"edit-strip\" routerLink=\"{{subject.id}}/edit\">\n                <p>Edit</p>\n            </div>\n            <div class=\"delete-strip\" (click)=\"deleteSubject(subject.id); $event.stopPropagation();\" >\n                <p>Delete</p>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AppSettings } from 'src/app/core/app-settings';\n\n// provided in the providers array of SharedModule, not tree-shakable\n@Injectable()\n\nexport class AuthService {\n\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/auth`;\n\n  constructor(private readonly http: HttpClient) { }\n\n  getUserOccupation() {\n    return this.http.get<any>(`${this.baseUrl}/get-occupation`);\n  }\n\n  public logout(): void {\n    localStorage.removeItem('token_id');\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { ModalService } from \"../services/modal.service\";\r\n\r\n@Injectable()\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n    \r\n    constructor\r\n    (\r\n        private readonly modalService: ModalService\r\n    ) {}\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        return next.handle(request).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                let errorMessage: string = '';\r\n                console.log(JSON.stringify(error));\r\n\r\n                if(error.error instanceof ErrorEvent) {\r\n                    // client-side error\r\n                    errorMessage = `Error: ${error.error.message}`;\r\n                } else {\r\n                    // server-side error \r\n                    errorMessage = `Error Code: ${error.status}\r\n                    \\nStatus Text: ${error.statusText}\r\n                    \\nMessage: ${error.error.message}`\r\n\r\n                    this.modalService.changeMessage(error.error.message);\r\n                }\r\n\r\n                // window.alert(errorMessage);\r\n                return throwError(errorMessage);\r\n            }) \r\n        ) as Observable<HttpEvent<any>>;\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubjectListComponent } from './subject-list/subject-list.component';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n\n\n@NgModule({\n  declarations: [SubjectListComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    SubjectListComponent\n  ],\n  // AuthService is not tree-shakable\n  providers: [\n    AuthService\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  private readonly messageSource = new Subject<string>();\n  public currentMessage = this.messageSource.asObservable();\n\n  constructor() { }\n\n  changeMessage(message: string) {\n    this.messageSource.next(message);\n  }\n\n}\n","<router-outlet></router-outlet>\n\n<div *ngIf=\"showModal\" class=\"modal box-shadow\">\n    <h3>{{modalMessage}}</h3>\n    <i class=\"far fa-times-circle hover close-cross\" (click)=\"showModal = false;\"></i>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ModalService } from './core/services/modal.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent implements OnInit {\n  title = 'exam-app';\n  public showModal: boolean = false;\n  public modalMessage!: string;\n\n  constructor\n  (\n    private readonly modalService: ModalService\n  ) {}\n  \n  ngOnInit() {\n    this.modalService.currentMessage.subscribe((message) => {\n      this.showModal = true;\n      this.modalMessage = message;\n    });\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { httpInterceptorProviders } from './core/interceptors';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    SharedModule,\n  ],\n  providers: [\n    httpInterceptorProviders,\n  ],\n  exports: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor() { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const tokenId = localStorage.getItem('token_id');\r\n\r\n        if (tokenId) {\r\n            const cloned = req.clone({\r\n                headers: req.headers.set(\r\n                    'Authorization',\r\n                    'Bearer ' + tokenId\r\n                )\r\n            });\r\n            return next.handle(cloned);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {path: 'teacher/subjects', loadChildren: () => import('./teacher/teacher.module').then(m => m.TeacherModule)},\n  {path: 'student/subjects', loadChildren: () => import('./student/student.module').then(m => m.StudentModule)},\n  {path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)}, \n  {path: 'home', component: HomeComponent},\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: '**', component: PageNotFoundComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}