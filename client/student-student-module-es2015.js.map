{"version":3,"sources":["./src/app/student/services/student-choice.service.ts","./src/app/student/services/student.service.ts","./src/app/student/student-routing.module.ts","./src/app/student/student.module.ts","./src/app/student/subjects/subjects.component.ts","./src/app/student/subjects/subjects.component.html","./src/app/student/student-exam-details/student-exam-details.component.ts","./src/app/student/student-exam-details/student-exam-details.component.html","./src/app/student/subject-details/subject-details.component.html","./src/app/student/subject-details/subject-details.component.ts"],"names":[],"mappings":";;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAwD;;;AAKjD,MAAM,oBAAoB;IAE/B,YAEmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,YAAO,GAAW,qEAAW,CAAC,YAAY,CAAC;IAIxD,CAAC;IAEE,YAAY,CACjB,aAAqB,EACrB,iBAAyB,EACzB,eAAuB,EACvB,OAAgB;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,IAAI,CAAC,OAAO,gCAAgC,EAAE;YAC3E,aAAa;YACb,iBAAiB;YACjB,eAAe;YACf,OAAO;SACR,CAAC,CAAC;IACL,CAAC;;wFAnBU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAwD;;;AAMjD,MAAM,cAAc;IAEzB,YAEmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,YAAO,GAAW,qEAAW,CAAC,YAAY,GAAG,GAAG,CAAC;IAI9D,CAAC;IAEL,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,OAAO,mBAAmB,CAAC,CAAC;IAChE,CAAC;IAED,wBAAwB,CAAC,SAAc;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,OAAO,oBAAoB,SAAS,QAAQ,CAAC,CAAC;IAClF,CAAC;;4EAbU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACoB;AACyB;AACd;;;AAEtF,MAAM,MAAM,GAAW,CAAC;QACpB,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE;YAChB,EAAE,IAAI,EAAE,4CAA4C,EAAE,SAAS,EAAE,gHAA2B,EAAE;YAC9F,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAuB,EAAE;YAC3D,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sFAAiB,EAAE,SAAS,EAAE,MAAM,EAAE;SAChE;KACJ,CAAC,CAAC;AAOI,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEb,oBAAoB,uFAFnB,4DAAY;;;;;;;;;;;;;AChB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACiB;AACE;AACX;AAC+B;AACc;;AAU7F,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBANf;YACP,4DAAY;YACZ,4EAAoB;YACpB,kEAAY;SACb;mIAEU,aAAa,mBAPT,8EAAiB,EAAE,kGAAuB,EAAE,gHAA2B,aAEpF,4DAAY;QACZ,4EAAoB;QACpB,kEAAY;;;;;;;;;;;;;;;;;;;;;;;;;ACDT,MAAM,iBAAiB;IAG5B,YAEmB,cAA8B,EAC9B,WAAwB,EACxB,MAAc;QAFd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAC9B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;IACrD,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;;kFAjBU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,yEAA0B;QACtB,yEAAoB;QAChB,yEAAyB;QACrB,wEAAwB;QAAA,mEAAQ;QAAA,4DAAK;QACrC,4EAAqE;QAAnB,yIAAS,YAAQ,IAAC;QAAC,kEAAO;QAAA,4DAAS;QACrF,4EAAqE;QAAA,+DAAI;QAAA,4DAAS;QACtF,4DAAM;QACV,4DAAM;QAEN,0EAAmB;QAEf,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,kFAA6D;QAEjE,4DAAO;QACX,4DAAM;;QAHoB,2DAAuB;QAAvB,oFAAuB;;;;;;;;;;;;;;ACTjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;ICoBd,wEAA2E;IACvE,yEAA0B;IACtB,0EAAiC;IAC7B,qEAAI;IAAA,uDAA6B;IAAA,4DAAK;IAC1C,4DAAM;IACN,qEAAI;IAAA,uDAA+B;IAAA,4DAAK;IACxC,+EAC8D;IAA1D,omBAAyD;IAAC,uDAA8B;IAAA,4DAAW;IAC3G,4DAAK;IACT,qEAAe;;;;;IANC,0DAA6B;IAA7B,2GAA6B;IAEjC,0DAA+B;IAA/B,wGAA+B;IAE2B,0DAA8B;IAA9B,8FAA8B;;;;IAYxF,yEAAgE;IAC5D,4EACwF;IAApF,sqBAAmF;IADvF,4DACwF;IACxF,oEAAG;IAAA,uDAAe;IAAA,4DAAI;IAC1B,4DAAK;;;IAHsB,0DAA2B;IAA3B,wFAA2B;IAE/C,0DAAe;IAAf,gFAAe;;;IAV9B,yEAA0B;IACtB,0EAAiC;IAC7B,qEAAI;IAAA,uDAA6B;IAAA,4DAAK;IAC1C,4DAAM;IACN,qEAAI;IAAA,uDAA+B;IAAA,4DAAK;IACxC,qEAAI;IAAA,uDAA+C;IAAA,4DAAK;IACxD,yEAA6B;IACzB,kLAIK;IACT,4DAAK;IACT,4DAAK;;;;;IAXO,0DAA6B;IAA7B,2GAA6B;IAEjC,0DAA+B;IAA/B,wGAA+B;IAC/B,0DAA+C;IAA/C,wHAA+C;IAEJ,0DAAmB;IAAnB,wFAAmB;;;IArB9E,wEAA2E;IAEvE,uLASe;IAEf,mQAec;IAElB,qEAAe;;;;IA5BI,0DAA+B;IAA/B,4FAA+B;;;IALtD,wEAC8F;IAE1F,wKA8Be;IAEnB,qEAAe;;;IAhCwB,0DAAyB;IAAzB,4FAAyB;;;IAZxE,wEAA0D;IACtD,yEAA0B;IACtB,qEAAI;IAAA,oEAAG;IAAA,mEAAQ;IAAA,4DAAI;IAAC,uDAAgC;IAAA,4DAAK;IACzD,qEAAI;IAAA,oEAAG;IAAA,0EAAe;IAAA,4DAAI;IAAC,uDAAqC;IAAA,4DAAK;IACrE,sEAAI;IAAA,qEAAG;IAAA,uEAAW;IAAA,4DAAI;IAAC,wDAAiD;;IAAA,4DAAK;IAC7E,sEAAI;IAAA,qEAAG;IAAA,qEAAS;IAAA,4DAAI;IAAC,wDAA+C;;IAAA,4DAAK;IAC7E,4DAAM;IAEN,yEAA+B;IAC3B,0JAmCe;;IACnB,4DAAK;IACT,qEAAe;;;;;IA5Ca,0DAAgC;IAAhC,0GAAgC;IACzB,0DAAqC;IAArC,+GAAqC;IACzC,0DAAiD;IAAjD,uLAAiD;IACnD,0DAA+C;IAA/C,qLAA+C;IAK/D,0DAAsC;IAAtC,iKAAsC;;;IAuC/C,oEAAG;IAAA,kJAAuF;IAAA,4DAAI;;AD5CnG,MAAM,2BAA2B;IAKtC,YAEmB,kBAAsC,EACtC,oBAA0C,EAC1C,oBAA0C,EAC1C,KAAqB;QAHrB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,UAAK,GAAL,KAAK,CAAgB;QAEtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC3E,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACxG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACjF,CAAC;IAEM,YAAY,CAAC,KAAU,EAAE,aAAqB,EAAE,iBAAyB,EAAE,eAAuB;QACvG,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,aAAa,EAAE,iBAAiB,EAAE,eAAe,EAAE,OAAO,CAAC;aACjG,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,EAAE,CAAC;IACf,CAAC;IAEM,UAAU,CAAC,KAAU,EAAE,aAAqB,EAAE,iBAAyB;QAC5E,MAAM,iBAAiB,GAAW,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACrD,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,iBAAiB,EAAE,aAAa,EAAE,iBAAiB,CAAC;aACxF,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,EAAE,CAAC;IACf,CAAC;;sGAhCU,2BAA2B;2GAA3B,2BAA2B;QCdxC,yEAAoB;QAChB,yEAAyB;QACrB,qEAAI;QAAA,+EAAoB;QAAA,4DAAK;QACjC,4DAAM;QACV,4DAAM;QAEN,yEAA0B;QACtB,0EAAmB;QAEf,2IA8Ce;;QAEf,mNAEc;QAClB,4DAAO;QAEX,4DAAM;;QArDiB,0DAA2B;QAA3B,mJAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ICmBtB,yEAAgE;IAC5D,uDAAgE;IAAA,4DAAK;;;IAArE,0DAAgE;IAAhE,+IAAgE;;;IACpE,yEAAgE;IAAA,8DAAG;IAAA,4DAAK;;;IAR5E,yEAA2F;IACvF,yEAAyB;IAAA,uDAA2B;IAAA,4DAAK;IACzD,yEAAyB;IAAA,uDAAuB;IAAA,4DAAK;IACrD,yEAA8B;IAAA,uDAA2B;IAAA,4DAAK;IAC9D,yEAAuB;IAAA,uDAAyC;;IAAA,4DAAK;IAErE,iKACyE;IACzE,iKAAwE;IAExE,0EAAwB;IAAA,wDAAoC;;IAAA,4DAAK;IACrE,4DAAK;;;IAXwC,2HAA6C;IAC7D,0DAA2B;IAA3B,2FAA2B;IAC3B,0DAAuB;IAAvB,uFAAuB;IAClB,0DAA2B;IAA3B,2FAA2B;IAClC,0DAAyC;IAAzC,oKAAyC;IAEvC,0DAAqC;IAArC,oGAAqC;IAErC,0DAAqC;IAArC,oGAAqC;IAEtC,0DAAoC;IAApC,yJAAoC;;;IApBxE,2EAAyE;IACrE,wEAAO;IACH,qEAAI;IAAA,kEAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,kEAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,gEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACnB,4DAAQ;IACR,yEAAO;IACH,4JAWK;IACT,4DAAQ;IACZ,4DAAQ;;;IAb4B,2DAAe;IAAf,oFAAe;;;IAXvD,wEAA8D;IAC1D,uJAuBQ;IACZ,qEAAe;;;;;IAxBgB,0DAAmC;IAAnC,8FAAmC;;;IA2B9D,oEAAG;IAAA,2FAAgC;IAAA,4DAAI;;;IAvCvD,wEAAkD;IAE9C,yEAA0B;IACtB,yEAAoB;IAChB,yEAAyB;IACrB,wEAAiB;IAAC,uDAA8B;;IAAA,4DAAK;IACzD,4DAAM;IACV,4DAAM;IAEN,0EAAmB;IACf,qEAAI;IAAA,mEAAQ;IAAA,4DAAK;IACjB,sJAyBe;;IAEf,gOAEc;IAElB,4DAAO;IACX,4DAAM;IACV,qEAAe;;;;IAvCmB,0DAA8B;IAA9B,2JAA8B;IAMrC,0DAA8B;IAA9B,wJAA8B;;ACClD,MAAM,uBAAuB;IAKlC,YAEmB,cAA8B,EAC9B,KAAqB,EACrB,cAA8B;QAF9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAE/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAClE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpF,CAAC;;8FAjBU,uBAAuB;uGAAvB,uBAAuB;QDZpC,sIA4Ce;;;QA5CA,+IAAuB","file":"student-student-module-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentChoiceService {\n  private readonly baseUrl: string = AppSettings.API_ENDPOINT;\n  constructor\n  (\n    private readonly http: HttpClient\n  ) { }\n\n  public selectChoice(\n    studentExamId: number, \n    sessionQuestionId: number, \n    sessionChoiceId: number, \n    checked: boolean\n    ): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/student-choices/select-choice`, { \n      studentExamId,\n      sessionQuestionId,\n      sessionChoiceId,\n      checked\n    });\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\nimport { StudentExam, Subject } from 'src/app/core/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private readonly baseUrl: string = AppSettings.API_ENDPOINT + '/';\n  constructor\n  (\n    private readonly http: HttpClient\n  ) { }\n\n  getSubjects(): Observable<Array<Subject>> {\n    return this.http.get<any>(`${this.baseUrl}students/subjects`);\n  }\n\n  getSubjectExamsOfStudent(subjectId: any): Observable<Array<StudentExam>> {\n    return this.http.get<any>(`${this.baseUrl}students/subject/${subjectId}/exams`);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SubjectsComponent } from '../student/subjects/subjects.component';\r\nimport { StudentExamDetailsComponent } from './student-exam-details/student-exam-details.component';\r\nimport { SubjectDetailsComponent } from './subject-details/subject-details.component';\r\n\r\nconst routes: Routes = [{\r\n    path: '', children: [\r\n        { path: ':subject-id/student-exams/:student-exam-id', component: StudentExamDetailsComponent },\r\n        { path: ':subject-id', component: SubjectDetailsComponent },\r\n        { path: '', component: SubjectsComponent, pathMatch: 'full' }\r\n    ]\r\n}];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class StudentRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StudentRoutingModule } from './student-routing.module';\nimport { SubjectsComponent } from './subjects/subjects.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { SubjectDetailsComponent } from './subject-details/subject-details.component';\nimport { StudentExamDetailsComponent } from './student-exam-details/student-exam-details.component';\n\n@NgModule({\n  declarations: [SubjectsComponent, SubjectDetailsComponent, StudentExamDetailsComponent],\n  imports: [\n    CommonModule,\n    StudentRoutingModule,\n    SharedModule\n  ]\n})\nexport class StudentModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'src/app/core/models';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { StudentService } from '../services/student.service';\n\n@Component({\n  selector: 'app-subjects',\n  templateUrl: './subjects.component.html',\n  styleUrls: ['./subjects.component.css']\n})\nexport class SubjectsComponent implements OnInit {\n  public subjects$!: Observable<Array<Subject>>;\n\n  constructor\n  (\n    private readonly studentService: StudentService,\n    private readonly authService: AuthService,\n    private readonly router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.subjects$ = this.studentService.getSubjects();\n  }\n\n  public logout() {\n    this.authService.logout();\n    this.router.navigate(['/home']);\n  }\n}\n","<div class=\"page-wrapper\">\n    <nav class=\"navbar\">\n        <div class=\"heading-nav\">\n            <h2 class=\"nav-heading\">SUBJECTS</h2>\n            <button class=\"hover white-button log-out-button\" (click)=\"logout()\">Log out</button>\n            <button class=\"hover white-button log-out-button\" routerLink=\"/home\">Home</button>\n        </div>\n    </nav>\n    \n    <main class=\"page\">\n\n        <h3>Your subjects</h3>\n        <app-subject-list [subjects$]=\"subjects$\"></app-subject-list>\n        \n    </main>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { StudentExamService } from 'src/app/teacher/services/student-exam.service';\nimport { StudentAnswerService } from 'src/app/shared/services/student-answer.service';\nimport { StudentChoiceService } from '../services/student-choice.service'\nimport { StudentExam } from 'src/app/core/models';\n\n@Component({\n  selector: 'app-student-exam-details',\n  templateUrl: './student-exam-details.component.html',\n  styleUrls: ['./student-exam-details.component.css']\n})\nexport class StudentExamDetailsComponent implements OnInit {\n  public studentExam$!: Observable<StudentExam>;\n  public studentExamQuestions$!: Observable<any>;\n  public studentExamId!: string | null;\n\n  constructor\n  (\n    private readonly studentExamService: StudentExamService,\n    private readonly studentChoiceService: StudentChoiceService,\n    private readonly studentAnswerService: StudentAnswerService,\n    private readonly route: ActivatedRoute\n  ) { \n    this.studentExamId = this.route.snapshot.paramMap.get('student-exam-id');\n  }\n\n  ngOnInit(): void {\n    this.studentExamQuestions$ = this.studentExamService.getStudentExamQuestionsStudent(this.studentExamId);\n    this.studentExam$ = this.studentExamService.getStudentExam(this.studentExamId);\n  }\n\n  public selectChoice(event: any, studentExamId: number, sessionQuestionId: number, sessionChoiceId: number): void {\n    const checked = event.target.checked;\n    this.studentChoiceService.selectChoice(studentExamId, sessionQuestionId, sessionChoiceId, checked)\n    .pipe(take(1))\n    .subscribe();\n  }\n\n  public giveAnswer(event: any, studentExamId: number, sessionQuestionId: number): void {\n    const studentAnswerText: string = event.target.value;\n    this.studentAnswerService.giveAnswer(studentAnswerText, studentExamId, sessionQuestionId)\n    .pipe(take(1))\n    .subscribe();\n  }\n}\n","<nav class=\"navbar\">\n    <div class=\"heading-nav\">\n        <h2>Student exam details</h2>\n    </div>\n</nav>\n\n<div class=\"page-wrapper\">\n    <main class=\"page\">\n\n        <ng-container *ngIf=\"studentExam$ | async as studentExam\">\n            <div class=\"page-details\">\n                <h3><b>Student:</b> {{studentExam.student.username}}</h3>\n                <h3><b>Faculty number:</b> {{studentExam.student.facultyNumber}}</h3>\n                <h3><b>Start time:</b> {{studentExam.session.startTime | date:'medium'}}</h3>\n                <h3><b>End time:</b> {{studentExam.session.endTime | date:'medium'}}</h3>\n            </div>\n\n            <ul class=\"exam-question-list\">\n                <ng-container\n                    *ngIf=\"(studentExamQuestions$ | async) as studentExamQuestions; else noQuestionsTemplate\">\n                    \n                    <ng-container *ngFor=\"let question of studentExamQuestions; let i = index\">\n\n                        <ng-container *ngIf=\"question.type == 'open'; else closedQuestionTemplate\">\n                            <li class=\"exam-question\">\n                                <div class=\"exam-question-title\">\n                                    <h2>{{i + 1}}. {{question.title}}</h2>\n                                </div>\n                                <h3>({{question.maxPoints}} Points)</h3>\n                                <textarea class=\"exam-textarea\" placeholder=\"Answer here\"\n                                    (keyup)=\"giveAnswer($event, studentExam.id, question.id)\">{{question.studentAnswerText}}</textarea>\n                            </li>\n                        </ng-container>\n\n                        <ng-template #closedQuestionTemplate >\n                            <li class=\"exam-question\">\n                                <div class=\"exam-question-title\">\n                                    <h2>{{i + 1}}. {{question.title}}</h2>\n                                </div>\n                                <h3>({{question.maxPoints}} Points)</h3>\n                                <h3>Correct choices: {{question.numCorrectChoices}}</h3>\n                                <ul class=\"exam-choice-list\">\n                                    <li class=\"exam-choice\" *ngFor=\"let choice of question.choices\">\n                                        <input type=\"checkbox\" [checked]=\"choice.answered\"\n                                            (click)=\"selectChoice($event, studentExam.id, question.id, choice.sessionChoiceId)\">\n                                        <p>{{choice.text}}</p>\n                                    </li>\n                                </ul>\n                            </li>\n                        </ng-template>\n\n                    </ng-container>\n\n                </ng-container>\n            </ul>\n        </ng-container>\n\n        <ng-template #noQuestionsTemplate>\n            <p>You cannot access this student exam because it has not started or had already finished.</p>\n        </ng-template>\n    </main>\n\n</div>","<ng-container *ngIf=\"subject$ | async as subject\">\n\n    <div class=\"page-wrapper\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <h2 id=\"heading\"> {{ subject.name | uppercase }}</h2>\n            </div>\n        </nav>\n\n        <main class=\"page\">\n            <h2>Sessions</h2>\n            <ng-container *ngIf=\"(studentExams$ | async) as studentExams\">\n                <table class=\"info-table\" *ngIf=\" studentExams.length !== 0; else empty\">\n                    <thead>\n                        <th>Subject</th>\n                        <th>Teacher</th>\n                        <th>Session name</th>\n                        <th>Start</th>\n                        <th>Result</th>\n                        <th>Status</th>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let studentExam of studentExams\" routerLink=\"student-exams/{{studentExam.id}}\">\n                            <td data-label=\"Subject\">{{studentExam.subjectName}}</td>\n                            <td data-label=\"Teacher\">{{studentExam.teacher}}</td>\n                            <td data-label=\"Session name\">{{studentExam.sessionName}}</td>\n                            <td data-label=\"Start\">{{studentExam.startTime | date:'medium'}}</td>\n\n                            <td data-label=\"Result\" *ngIf=\"studentExam.status === 'closed'\">\n                                {{studentExam.totalEarnedPoints}}/{{studentExam.totalMaxPoints}}</td>\n                            <td data-label=\"Result\" *ngIf=\"studentExam.status !== 'closed'\">N/A</td>\n\n                            <td data-label=\"Status\">{{ studentExam.status | titlecase }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </ng-container>\n\n            <ng-template #empty>\n                <p>You don't have any sessions yet.</p>\n            </ng-template>\n\n        </main>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StudentExam, Subject } from 'src/app/core/models';\nimport { SubjectService } from 'src/app/teacher/services/subject.service';\nimport { StudentService } from '../services/student.service';\n\n@Component({\n  selector: 'app-subject-details',\n  templateUrl: './subject-details.component.html',\n  styleUrls: ['./subject-details.component.css']\n})\nexport class SubjectDetailsComponent implements OnInit {\n  public subjectId: string | null;\n  public studentExams$!: Observable<Array<StudentExam>>;\n  public subject$!: Observable<Subject>;\n\n  constructor\n  (\n    private readonly studentService: StudentService,\n    private readonly route: ActivatedRoute,\n    private readonly subjectService: SubjectService\n  ) { \n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  ngOnInit(): void {\n    this.subject$ = this.subjectService.getSubject(this.subjectId);\n    this.studentExams$ = this.studentService.getSubjectExamsOfStudent(this.subjectId);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}