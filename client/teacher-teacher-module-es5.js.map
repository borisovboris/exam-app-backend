{"version":3,"sources":["webpack:///src/app/teacher/teacher.module.ts","webpack:///src/app/teacher/subject-edit/subject-edit.component.ts","webpack:///src/app/teacher/subject-edit/subject-edit.component.html","webpack:///src/app/teacher/services/teacher.service.ts","webpack:///src/app/teacher/subject-details/subject-details.component.html","webpack:///src/app/teacher/subject-details/subject-details.component.ts","webpack:///src/app/teacher/subjects/subjects.component.ts","webpack:///src/app/teacher/subjects/subjects.component.html","webpack:///src/app/teacher/teacher-routing.module.ts","webpack:///src/app/teacher/add-subject/add-subject.component.ts","webpack:///src/app/teacher/add-subject/add-subject.component.html"],"names":["TeacherModule","SubjectEditComponent","fb","subjectService","route","router","subjectEditForm","group","name","required","description","subjectId","snapshot","paramMap","get","getSubject","pipe","subscribe","subject","patchValue","invalid","value","editSubject","navigate","submit","TeacherService","http","baseUrl","API_ENDPOINT","SubjectDetailsComponent","subject$","SubjectsComponent","teacherService","authService","refreshedSubjects$","subjects$","_","getTeacherSubjects","next","logout","refreshSubjects","routes","path","children","loadChildren","then","m","SubjectTeacherModule","TopicModule","ExamModule","SubjectStudentModule","SessionModule","component","pathMatch","TeacherRoutingModule","forChild","AddSubjectComponent","subjectForm","createSubject"],"mappings":"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","file":"teacher-teacher-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TeacherRoutingModule } from './teacher-routing.module';\nimport { SubjectsComponent } from './subjects/subjects.component';\nimport { AddSubjectComponent } from './add-subject/add-subject.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SubjectDetailsComponent } from './subject-details/subject-details.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { SubjectEditComponent } from './subject-edit/subject-edit.component';\n\n\n@NgModule({\n  declarations: [\n    SubjectsComponent, \n    AddSubjectComponent, \n    SubjectDetailsComponent, SubjectEditComponent, \n  ],\n  imports: [\n    CommonModule,\n    TeacherRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  providers: [\n  ]\n})\nexport class TeacherModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { SubjectService } from '../services/subject.service';\n\n@Component({\n  selector: 'app-subject-edit',\n  templateUrl: './subject-edit.component.html',\n  styleUrls: ['./subject-edit.component.css']\n})\nexport class SubjectEditComponent implements OnInit {\n\n  public subjectId: string | null;\n  public subjectEditForm = this.fb.group({\n    name: ['', [Validators.required]],\n    description: ['', [Validators.required]] \n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly subjectService: SubjectService,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router\n    ) { \n      this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n    }\n\n  public ngOnInit(): void {\n    this.subjectService.getSubject(this.subjectId)\n    .pipe(take(1))\n    .subscribe((subject) => {\n      this.subjectEditForm.patchValue({ name: subject.name });\n      this.subjectEditForm.patchValue({ description: subject.description });\n    });\n  }\n\n  public submit() {\n    if(this.subjectEditForm.invalid) {\n      return;\n    }\n    \n    const { name, description } = this.subjectEditForm.value;\n\n    this.subjectService.editSubject(this.subjectId, name, description)\n    .pipe(take(1))\n    .subscribe(() => {\n        this.router.navigate(['/teacher/subjects']);\n    });\n\n  }\n\n}\n","<div class=\"form-wrapper\">\n\n    <div class=\"center-form\">\n        <form [formGroup]=\"subjectEditForm\" (ngSubmit)=\"submit()\" class=\"form-box\">\n            <h1>Edit subject</h1>\n            <div>\n                <input name=\"name\" formControlName=\"name\" type=\"text\" placeholder=\"Name\" class=\"blue-input\">\n                <textarea class=\"form-description\" name=\"description\" formControlName=\"description\" type=\"description\" placeholder=\"Description (optional)\">\n                </textarea>\n            </div>\n\n            <button class=\"hover form-blue-button bottom-button\" type=\"submit\"\n            [disabled]=\"this.subjectEditForm.invalid\">\n                Edit\n            </button>\n        </form>\n    </div>\n    \n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\nimport { Subject } from 'src/app/core/models';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeacherService {\n\n  private readonly baseUrl: string = AppSettings.API_ENDPOINT;\n\n  constructor(private http: HttpClient) {}\n\n  public getTeacherSubjects(): Observable<Array<Subject>> {\n    return this.http.get<Array<Subject>>(`${this.baseUrl}/teachers/subjects`);\n  }\n  \n}\n","<ng-container *ngIf=\"subject$ | async as subject\">\n    <div class=\"page-wrapper\">\n\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <h2 id=\"heading\">{{subject.name | uppercase}}</h2>\n            </div>\n        </nav>\n\n        <div class=\"half-flex-container\">\n            <div class=\"half-flex-item left box-shadow\">\n                <h2>Subject details</h2>\n                <p><b>Description:</b> {{subject.description}}</p>\n            </div>\n            <div class=\"half-flex-item right box-shadow\">\n                <div class=\"subject-buttons\">\n                    <button class=\"hover blue-button\" routerLink=\"exams\">Exams</button>\n                    <button class=\"hover blue-button\" routerLink=\"topics\">Topics</button>\n                    <button class=\"hover blue-button\" routerLink=\"teachers\">Teachers</button>\n                    <button class=\"hover blue-button\" routerLink=\"students\">Students</button>\n                    <button class=\"hover blue-button\" routerLink=\"sessions\">Sessions</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'src/app/core/models';\nimport { SubjectService } from '../services/subject.service';\n\n@Component({\n  selector: 'app-subject-details',\n  templateUrl: './subject-details.component.html',\n  styleUrls: ['./subject-details.component.css']\n})\nexport class SubjectDetailsComponent implements OnInit {\n  subject$!: Observable<Subject>;\n  subjectId: string | null;\n\n  constructor(\n    private readonly subjectService: SubjectService,\n    private readonly route: ActivatedRoute,\n    ) {\n      this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n    }\n\n  public ngOnInit(): void {\n    this.subject$ = this.subjectService.getSubject(this.subjectId);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { switchMap } from 'rxjs/operators';\nimport { Subject } from 'src/app/core/models';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { TeacherService } from '../services/teacher.service';\n\n@Component({\n  selector: 'app-subjects',\n  templateUrl: './subjects.component.html',\n  styleUrls: ['./subjects.component.css']\n})\nexport class SubjectsComponent implements OnInit {\n  public refreshedSubjects$ = new BehaviorSubject<boolean>(true);\n  public subjects$!: Observable<Array<Subject>>;\n\n  constructor(\n    private readonly teacherService: TeacherService,\n    private readonly authService: AuthService,\n    private readonly router: Router\n  ) { }\n\n  public ngOnInit(): void {\n    this.subjects$ = this.refreshedSubjects$.pipe(switchMap(_ => this.teacherService.getTeacherSubjects()));\n  }\n\n  public refreshSubjects(): void {\n    this.refreshedSubjects$.next(true);\n  }\n\n  public logout() {\n    this.authService.logout();\n    this.router.navigate(['/home']);\n  }\n}\n","<div class=\"page-wrapper\">\n    <nav class=\"navbar\">\n        <div class=\"heading-nav\">\n            <h2 class=\"nav-heading\">SUBJECTS</h2>\n            <button class=\"hover white-button log-out-button\" (click)=\"logout()\">Logout</button>\n            <button class=\"hover white-button log-out-button\" routerLink=\"/home\">Home</button>\n        </div>\n    </nav>\n    \n    <main class=\"page\">\n        <h3>Your subjects</h3>\n        <app-subject-list [subjects$]=\"subjects$\" (refreshSubjectsEvent)=\"refreshSubjects()\"></app-subject-list>\n    </main>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddSubjectComponent } from './add-subject/add-subject.component';\nimport { SubjectDetailsComponent } from './subject-details/subject-details.component';\nimport { SubjectEditComponent } from './subject-edit/subject-edit.component';\nimport { SubjectsComponent } from './subjects/subjects.component';\n\nconst routes: Routes = [{\n  path: '', children: [\n    { path: ':subject-id/teachers', loadChildren: () => import('./subject-teacher/subject-teacher.module').then((m) => m.SubjectTeacherModule) },\n    { path: ':subject-id/topics', loadChildren: () => import('./topic/topic.module').then((m) => m.TopicModule) },\n    { path: ':subject-id/exams', loadChildren: () => import('./exam/exam.module').then((m) => m.ExamModule) },\n    { path: ':subject-id/students', loadChildren: () => import('./subject-student/subject-student.module').then((m) => m.SubjectStudentModule) },\n    { path: ':subject-id/sessions', loadChildren: () => import('./session/session.module').then((m) => m.SessionModule) },\n    { path: 'add', component: AddSubjectComponent },\n    { path: ':subject-id/edit', component: SubjectEditComponent },\n    { path: ':subject-id', component: SubjectDetailsComponent },\n    { path: '', component: SubjectsComponent, pathMatch: 'full' }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TeacherRoutingModule { }\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { SubjectService } from '../services/subject.service';\n\n@Component({\n  selector: 'app-add-subject',\n  templateUrl: './add-subject.component.html',\n  styleUrls: ['./add-subject.component.css']\n})\nexport class AddSubjectComponent {\n\n  public subjectForm = this.fb.group({\n    name: ['', [Validators.required]],\n    description: ['', [Validators.required]] \n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly subjectService: SubjectService,\n    private readonly router: Router\n    ) { }\n\n  submit(): void {\n    if(this.subjectForm.invalid) {\n      return;\n    }\n\n    const { name, description } = this.subjectForm.value;\n\n    this.subjectService.createSubject(name, description)\n    .pipe(take(1))\n    .subscribe(() => {\n      this.router.navigate(['/teacher/subjects']);\n    });\n  }\n\n}\n","<div class=\"form-wrapper\">\n\n    <div class=\"center-form\">\n        <form [formGroup]=\"subjectForm\" class=\"form-box\">\n            <h1>Create subject</h1>\n            <div>\n                <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" class=\"blue-input\">\n                \n                <textarea class=\"form-description\" formControlName=\"description\" type=\"description\" \n                placeholder=\"Description\"></textarea>\n            </div>\n            <button class=\"hover form-blue-button bottom-button\" [disabled]=\"this.subjectForm.invalid\" \n            type=\"submit\" (click)=\"submit()\">\n                Create\n            </button>\n        </form>\n    </div>\n    \n</div>"]}