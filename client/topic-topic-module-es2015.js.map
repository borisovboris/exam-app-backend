{"version":3,"sources":["./src/app/teacher/topic/topics/topics.component.ts","./src/app/teacher/topic/topics/topics.component.html","./src/app/teacher/topic/add-question/add-question.component.ts","./src/app/teacher/topic/add-question/add-question.component.html","./src/app/teacher/topic/topic-edit/topic-edit.component.ts","./src/app/teacher/topic/topic-edit/topic-edit.component.html","./src/app/teacher/topic/topic.module.ts","./src/app/teacher/topic/topic-routing.module.ts","./src/app/teacher/topic/topic-details/topic-details.component.ts","./src/app/teacher/topic/topic-details/topic-details.component.html","./src/app/teacher/services/question.service.ts","./src/app/teacher/topic/question-details/question-details.component.ts","./src/app/teacher/topic/question-details/question-details.component.html","./src/app/teacher/topic/add-topic/add-topic.component.ts","./src/app/teacher/topic/add-topic/add-topic.component.html","./src/app/teacher/services/question-type.service.ts"],"names":[],"mappings":"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","file":"topic-topic-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { Subject, Topic } from 'src/app/core/models';\nimport { SubjectService } from '../../services/subject.service';\nimport { TopicService } from '../../services/topic.service';\n\n@Component({\n  selector: 'app-topics',\n  templateUrl: './topics.component.html',\n  styleUrls: ['./topics.component.css']\n})\nexport class TopicsComponent implements OnInit {\n\n  public subject$!: Observable<Subject>;\n  public topics$!: Observable<Array<Topic>>;\n  public refreshedTopics$ = new BehaviorSubject<boolean>(true);\n  public subjectId: string | null;\n\n  constructor\n    (\n      private readonly route: ActivatedRoute,\n      private readonly subjectService: SubjectService,\n      private readonly topicService: TopicService\n  ) {\n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  public ngOnInit(): void {\n    this.subject$ = this.subjectService.getSubject(this.subjectId);\n    this.topics$ = this.refreshedTopics$.pipe(switchMap(_ => this.subjectService.getSubjectTopics(this.subjectId)));\n  }\n\n  public refreshTopics() {\n    this.refreshedTopics$.next(true);\n  }\n\n  public deleteTopic(topicId: number): void {\n    this.topicService.deleteTopic(topicId)\n      .pipe(take(1))\n      .subscribe(() => {\n        this.refreshTopics();\n      })\n  }\n}\n","<ng-container *ngIf=\"subject$ | async as subject\">\n\n    <div class=\"page-wrapper\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <h2 id=\"heading\">{{ subject.name | uppercase }}</h2>\n            </div>\n\n        </nav>\n\n        <main class=\"page\">\n\n            <h2>Topics</h2>\n\n            <div class=\"rectangle-flex-container\">\n                <div class=\"rectangle-flex-item hover box-shadow\" id=\"add-topic\" routerLink=\"add\">\n                    <div class=\"rectangle-content\">\n                        <h3>\n                            <i class=\"fas fa-plus\"></i>\n                        </h3>\n                    </div>\n                </div>\n\n                <div class=\"rectangle-flex-item hover box-shadow\" *ngFor=\"let topic of topics$ | async\"\n                    routerLink=\"{{topic.id}}\">\n                    <div class=\"rectangle-content\">\n                        <h3>\n                            {{ topic.name }}\n                        </h3>\n                    </div>\n                    <div class=\"edit-strip\" routerLink=\"{{topic.id}}/edit\">\n                        <p>Edit</p>\n                    </div>\n                    <div class=\"delete-strip\" (click)=\"deleteTopic(topic.id); $event.stopPropagation();\">\n                        <p>Delete</p>\n                    </div>\n                </div>\n            </div>\n\n        </main>\n    </div>\n</ng-container>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { QuestionType } from 'src/app/core/models';\nimport { QuestionTypeService } from '../../services/question-type.service';\nimport { QuestionService } from '../../services/question.service';\n\n@Component({\n  selector: 'app-add-question',\n  templateUrl: './add-question.component.html',\n  styleUrls: ['./add-question.component.css']\n})\nexport class AddQuestionComponent implements OnInit{\n  public questionForm: FormGroup = this.createForm();\n  public topicId: string | null;\n  public questionTypes$!: Observable<Array<QuestionType>>;\n  @Output() public newQuestionEvent = new EventEmitter<void>();\n\n  constructor\n  (\n    private readonly route: ActivatedRoute,\n    private readonly fb: FormBuilder,\n    private readonly questionService: QuestionService,\n    private readonly questionTypeService: QuestionTypeService\n  ) { \n    this.topicId = this.route.snapshot.paramMap.get('topic-id');\n  }\n\n  ngOnInit() {\n    this.questionTypes$ = this.questionTypeService.getQuestionTypes();\n  }\n\n  public createForm(): FormGroup {\n    return this.fb.group({\n      title: ['', [Validators.required]],\n      type: ['', [Validators.required]],\n      maxPoints: ['', [Validators.required]],\n      choices: this.fb.array([])\n    });\n  }\n\n  get choicesControls(): Array<AbstractControl> {\n    return (this.questionForm.get(\"choices\") as FormArray).controls;\n  }\n\n  public choices(): FormArray {\n    return (this.questionForm.get(\"choices\") as FormArray)\n  }\n\n  public createChoice(): FormGroup {\n    return this.fb.group({\n      text: ['', [Validators.required]],\n      isCorrect: [false]\n    })\n  }\n  \n  public addChoice(): void {\n    if(this.choices().length >= 5) {\n      return;\n    }\n    this.choices().push(this.createChoice());\n  }\n\n  public removeChoice(index: number) {\n    this.choices().removeAt(index);\n  }\n\n  public submitQuestion(): void {\n    /*\n    1. A closed question must have at least 2 choices.\n    2. A closed question must have at least 1 correct choice.\n    */\n    let question = {};\n    const formValue = this.questionForm.value;\n    const questionType = formValue.type;\n\n    if(questionType === 'open') {\n      this.questionForm.removeControl('choices');\n    }\n\n    if(this.questionForm.invalid) {\n        return;\n    }\n\n    if(questionType === 'open') {\n      const { title, type, maxPoints } = formValue;\n      question = { title, type, topicId: this.topicId, maxPoints }\n\n    } else if (questionType === 'closed') {   \n      const { title, type, choices, maxPoints } = formValue;\n      const atLeastOneRightChoice = choices.some((choice: any) => choice.isCorrect === true);\n\n      if(choices.length < 2) {\n        return;\n      } else if (!atLeastOneRightChoice) {\n        return;\n      }\n\n      question = { title, type, topicId: this.topicId, choices, maxPoints};\n    }\n    // return; \n\n    this.questionService.createQuestion(question)\n    .pipe(take(1))\n    .subscribe(() => {\n      //inform parent that a question is created and refresh questions\n      this.newQuestionEvent.emit();\n      //refresh questionForm\n      this.questionForm = this.createForm();\n    });\n  }\n\n}\n","<form [formGroup]=\"questionForm\">\n    <h4>Question type</h4>\n\n    <div id=\"types\">\n        <div class=\"hover\" *ngFor=\"let questionType of questionTypes$ | async\">\n            <input type=\"radio\" name=\"type\" formControlName=\"type\" value=\"{{questionType.type}}\">\n            <label for=\"open-type\">{{questionType.type}}</label>\n        </div>\n    </div>\n\n    <ng-container *ngIf=\"questionForm.value.type != '' \">\n        <input placeholder=\"Question's title\" formControlName=\"title\" class=\"blue-input\">\n\n        <input placeholder=\"Points for correct answer/s\" formControlName=\"maxPoints\" class=\"blue-input\">\n    </ng-container>\n\n    <div id=\"choices-list\" *ngIf=\"questionForm.value.type === 'closed'\">\n        <button id=\"add-choice\" class=\"hover white-button\" (click)=\"addChoice()\">Add choice</button>\n        <p>Mark the checkbox of the choices that are correct</p>\n\n        <div formArrayName=\"choices\" *ngFor=\"let choice of choicesControls; let i = index\">\n            <div [formGroupName]=\"i\">\n                <input type=\"checkbox\" formControlName=\"isCorrect\" class=\"hover checkbox\">\n                <input formControlName=\"text\" placeholder=\"Choice &#8470;{{i + 1}}\" class=\"blue-input choice\">\n                <button (click)=\"removeChoice(i)\" class=\"hover remove-btn\">Remove</button>\n            </div>\n        </div>\n    </div>\n\n    <button class=\"hover form-blue-button submit-button\" (click)=\"submitQuestion()\">\n        Add question\n    </button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { TopicService } from '../../services/topic.service';\n\n@Component({\n  selector: 'app-topic-edit',\n  templateUrl: './topic-edit.component.html',\n  styleUrls: ['./topic-edit.component.css']\n})\nexport class TopicEditComponent implements OnInit {\n\n  public subjectId: string | null;\n  public topicId: string | null;\n  public topicEditForm = this.fb.group({\n    name: ['', [Validators.required]]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly topicService: TopicService\n  ) { \n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n    this.topicId = this.route.snapshot.paramMap.get('topic-id');\n  }\n\n  public ngOnInit(): void {\n    this.topicService.getTopic(this.topicId)\n    .pipe(take(1))\n    .subscribe((topic) => {\n        this.topicEditForm.patchValue({ name: topic.name })\n    });\n  }\n\n  public submit(): void {\n    const { name } = this.topicEditForm.value;\n\n    this.topicService.editTopic(this.topicId, name)\n    .pipe(take(1))\n    .subscribe(() => {\n      this.router.navigate([`/teacher/subjects/${this.subjectId}/topics`]);\n    });\n  }\n\n}\n","<div class=\"form-wrapper\">\n\n    <div class=\"center-form\">\n        <form [formGroup]=\"topicEditForm\" (ngSubmit)=\"submit()\" class=\"form-box\">\n            <h1>Edit topic</h1>\n            <div>\n                <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" class=\"blue-input\">  \n            </div>\n\n            <button class=\"hover form-blue-button bottom-button\" type=\"submit\"\n            [disabled]=\"this.topicEditForm.invalid\">Edit\n            </button>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddTopicComponent } from './add-topic/add-topic.component';\nimport { TopicDetailsComponent } from './topic-details/topic-details.component';\nimport { TopicsComponent } from './topics/topics.component';\n\nimport { TopicRoutingModule } from './topic-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AddQuestionComponent } from './add-question/add-question.component';\nimport { QuestionDetailsComponent } from './question-details/question-details.component';\nimport { TopicEditComponent } from './topic-edit/topic-edit.component';\n\n\n@NgModule({\n  declarations: [\n    AddTopicComponent,\n    TopicDetailsComponent,\n    TopicsComponent,\n    AddQuestionComponent,\n    QuestionDetailsComponent,\n    TopicEditComponent\n  ],\n  imports: [\n    CommonModule,\n    TopicRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class TopicModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddTopicComponent } from './add-topic/add-topic.component';\nimport { TopicDetailsComponent } from './topic-details/topic-details.component';\nimport { TopicEditComponent } from './topic-edit/topic-edit.component';\nimport { TopicsComponent } from './topics/topics.component';\n\nconst routes: Routes = [\n  { path: '', children: [\n    { path: 'add', component: AddTopicComponent },\n    { path: ':topic-id/edit', component: TopicEditComponent },\n    { path: ':topic-id', component: TopicDetailsComponent },\n    { path: '', component: TopicsComponent, pathMatch: 'full'},\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TopicRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { shareReplay, take } from 'rxjs/operators';\nimport { Question, Topic } from 'src/app/core/models';\nimport { QuestionService } from '../../services/question.service';\nimport { TopicService } from '../../services/topic.service';\n\n@Component({\n  selector: 'app-topic-details',\n  templateUrl: './topic-details.component.html',\n  styleUrls: ['./topic-details.component.css']\n})\nexport class TopicDetailsComponent implements OnInit {\n  public topic$!: Observable<Topic>;\n  public questions$!: Observable<Array<Question>>;\n  public topicId: string | null;\n  public subjectId: string | null;\n  public selectedQuestion!: Question;\n  public showQuestionDetails: boolean = false;\n\n  constructor\n    (\n      private readonly route: ActivatedRoute,\n      private readonly topicService: TopicService,\n      private readonly questionService: QuestionService,\n    ) {\n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n    this.topicId = this.route.snapshot.paramMap.get('topic-id');\n  }\n\n  public ngOnInit(): void {\n    this.topic$ = this.topicService.getTopic(this.topicId);\n    this.questions$ = this.topicService.getTopicQuestions(this.topicId);\n  }\n\n\n  public getQuestion(questionId: number): void {\n    this.questionService.getQuestion(questionId)\n      .pipe(take(1))\n      .subscribe((question) => {\n        this.showQuestionDetails = true;\n        this.selectedQuestion = question;\n      });\n  }\n\n  public refreshQuestions(): void {\n    this.questions$ = this.topicService.getTopicQuestions(this.topicId);\n  }\n\n  public closeQuestionDetails(): void {\n    this.showQuestionDetails = false;\n  }\n\n  public deleteQuestion(questionId: number): void {\n\n    this.questionService.deleteQuestion(questionId)\n      .pipe(take(1))\n      .subscribe(() => {\n        this.refreshQuestions();\n      });\n\n  }\n\n}\n","<ng-container *ngIf=\"topic$ | async as topic\">\n\n    <div class=\"page-wrapper\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <h2 id=\"heading\">{{ topic.name | uppercase }}</h2>\n            </div>\n        </nav>\n\n        <div class=\"half-flex-container\">\n\n            <div class=\"half-flex-item left\">\n                <h2 class=\"subheading\">Topic questions</h2>\n\n                <ng-container *ngIf=\"(questions$ | async) as questions\">\n                    <ng-container *ngIf=\"questions.length !== 0; else empty\">\n                        <table class=\"info-table\">\n                            <thead>\n                                <tr>\n                                    <th>Title</th>\n                                    <th>Type</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let question of questions\" (click)=\"getQuestion(question.id)\">\n                                    <td data-label=\"Title\">{{question.title}}</td>\n                                    <td data-label=\"Type\">{{question.questionType.type | uppercase}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #empty>\n                    <p id=\"empty\">No questions have been added to this topic yet.</p>\n                </ng-template>\n\n            </div>\n\n            <div class=\"half-flex-item right box-shadow\">\n                <app-add-question *ngIf=\"!showQuestionDetails\" (newQuestionEvent)=\"refreshQuestions()\">\n                </app-add-question>\n\n                <app-question-details *ngIf=\"showQuestionDetails\" [question]=\"selectedQuestion\"\n                    (closeQuestionDetailsEvent)=\"closeQuestionDetails()\" (deleteQuestionEvent)=\"deleteQuestion($event)\">\n                </app-question-details>\n            </div>\n\n        </div>\n    </div>\n</ng-container>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\nimport { Question } from 'src/app/core/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/questions`;\n\n  constructor\n  (\n    private readonly http: HttpClient\n  ) { }\n\n  public createQuestion(question: any): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}`, question);\n  }\n\n  public getQuestion(questionId: number): Observable<Question> {\n    return this.http.get<Question>(`${this.baseUrl}/${questionId}`);\n  }\n\n  public deleteQuestion(questionId: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${questionId}`);\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Question } from 'src/app/core/models';\n\n@Component({\n  selector: 'app-question-details',\n  templateUrl: './question-details.component.html',\n  styleUrls: ['./question-details.component.css']\n})\nexport class QuestionDetailsComponent  {\n  @Input() public question!: Question;\n  @Output() public closeQuestionDetailsEvent = new EventEmitter<void>();\n  @Output() public deleteQuestionEvent = new EventEmitter<number>();\n  \n  constructor() { }\n\n  public closeQuestionDetails(): void {\n    this.closeQuestionDetailsEvent.emit();\n  }\n\n  public deleteQuestion(questionId: number): void {\n    this.deleteQuestionEvent.emit(questionId);\n    this.closeQuestionDetails();\n  }\n\n}\n","<div class=\"clearfix\">\n    <i class=\"far fa-times-circle hover close-cross\" (click)=\"closeQuestionDetails()\"></i>\n</div>\n\n\n<h3><b>Question title:</b> {{question.title}}</h3>\n<h3><b>Max points:</b> {{question.maxPoints}}</h3>\n\n<ng-container *ngIf=\"question.questionType.type === 'closed'; else openQuestion\">\n    <h3><b>Choices: </b></h3>\n    <p *ngFor=\"let choice of question.choices\">{{choice.text}} <i>({{choice.isCorrect}})</i></p>\n</ng-container>\n\n<ng-template #openQuestion>\n    <p>This is an open question</p>\n</ng-template>\n\n<button class=\"remove-btn hover submit-button\" (click)=\"deleteQuestion(question.id)\">Delete question</button>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { TopicService } from '../../services/topic.service';\n\n@Component({\n  selector: 'app-add-topic',\n  templateUrl: './add-topic.component.html',\n  styleUrls: ['./add-topic.component.css']\n})\n\nexport class AddTopicComponent implements OnInit {\n  public subjectId!: string | null;\n  public topicForm = this.fb.group({\n    name: ['', [Validators.required]]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly topicService: TopicService\n  ) { }\n\n  public ngOnInit(): void {\n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  public submit() {\n    if(this.topicForm.invalid) {\n      return;\n    }\n    \n    const { name } = this.topicForm.value;\n\n    this.topicService.createTopic(name, this.subjectId)\n    .pipe(take(1))\n    .subscribe(() => {\n      this.router.navigate([`/teacher/subjects/${this.subjectId}/topics`]);\n    });\n  }\n\n}\n","<div class=\"form-wrapper\">\n\n    <div class=\"center-form\">\n        <form [formGroup]=\"topicForm\" (ngSubmit)=\"submit()\" class=\"form-box\">\n            <h1>Create topic</h1>\n            <div>\n                <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" class=\"blue-input\">\n            </div>\n\n            <button class=\"hover form-blue-button bottom-button\" type=\"submit\"\n            [disabled]=\"this.topicForm.invalid\">Create\n            </button>\n        </form>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\nimport { QuestionType } from 'src/app/core/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionTypeService {\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/question-types`;\n  \n  constructor(private readonly http: HttpClient) { }\n\n  public getQuestionTypes(): Observable<Array<QuestionType>> {\n    return this.http.get<Array<QuestionType>>(this.baseUrl);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}