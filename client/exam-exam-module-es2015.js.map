{"version":3,"sources":["./src/app/teacher/exam/exam-routing.module.ts","./src/app/teacher/exam/exam-edit/exam-edit.component.ts","./src/app/teacher/exam/exam-edit/exam-edit.component.html","./src/app/teacher/exam/exam-details/exam-details.component.ts","./src/app/teacher/exam/exam-details/exam-details.component.html","./src/app/teacher/exam/exams/exams.component.ts","./src/app/teacher/exam/exams/exams.component.html","./src/app/teacher/exam/add-exam/add-exam.component.ts","./src/app/teacher/exam/add-exam/add-exam.component.html","./src/app/teacher/services/exam.service.ts","./src/app/teacher/exam/exam.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACU;AACY;AACT;AACX;;;AAExD,8DAA8D;AAC3D,kEAAkE;AAClE,oDAAoD;AAGxD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE;YACnB,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,6EAAgB,EAAE;YAC5C,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,gFAAiB,EAAE;YACvD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAoB,EAAE;YACrD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAE,SAAS,EAAE,MAAM,EAAE;SAC3D,EAAC;CACH,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;;;;;;;;;;;;;ACtBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEnB;;;;;AAQ/B,MAAM,iBAAiB;IAQ5B,YACmB,EAAe,EACf,KAAqB,EACrB,MAAc,EACd,WAAwB;QAHxB,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAR3C,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAClC,CAAC,CAAC;QAQD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;aACpC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC5B,OAAO;SACR;QAED,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAEzC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;aAC3C,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,IAAI,CAAC,SAAS,QAAQ,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;;kFAvCU,iBAAiB;iGAAjB,iBAAiB;QCX9B,yEAA0B;QAEtB,yEAAyB;QACrB,0EAAwE;QAAvC,6IAAY,YAAQ,IAAC;QAClD,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,yEAAiB;QACb,sEAAgF;QACpF,4DAAM;QAEN,4EAC2C;QAAA,+DAAI;QAAA,4DAAS;QAC5D,4DAAO;QACX,4DAAM;QACV,4DAAM;;QAVQ,0DAA0B;QAA1B,uFAA0B;QAOxB,0DAAsC;QAAtC,8FAAsC;;;;;;;;;;;;;;ACPtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;ICcX,wEACmF;IAC/E,yEAA0B;IACtB,0EAAiC;IAC7B,qEAAI;IAAA,uDAAiC;IAAA,4DAAK;IAC1C,6EACuB;IADf,4fAAyC;IAC1B,iEAAM;IAAA,4DAAS;IAC1C,4DAAM;IACN,qEAAI;IAAA,uDAAmC;IAAA,4DAAK;IAC5C,0EAAgF;IACpF,4DAAK;IACT,qEAAe;;;;;IAPC,0DAAiC;IAAjC,iHAAiC;IAIrC,0DAAmC;IAAnC,6GAAmC;;;IAcnC,yEAAoE;IAChE,oEAAG;IAAA,uDAAgB;IAAA,oEAAG;IAAA,uDAAsB;IAAA,4DAAI;IAAA,4DAAI;IACxD,4DAAK;;;IADE,0DAAgB;IAAhB,0FAAgB;IAAG,0DAAsB;IAAtB,gGAAsB;;;;IATxD,yEAA0B;IACtB,0EAAiC;IAC7B,qEAAI;IAAA,uDAAiC;IAAA,4DAAK;IAC1C,6EACuB;IADf,2fAAyC;IAC1B,iEAAM;IAAA,4DAAS;IAC1C,4DAAM;IACN,qEAAI;IAAA,uDAAmC;IAAA,4DAAK;IAC5C,yEAA6B;IACzB,0LAEK;IACT,4DAAK;IACT,4DAAK;;;;;IAVO,0DAAiC;IAAjC,iHAAiC;IAIrC,0DAAmC;IAAnC,6GAAmC;IAEQ,0DAAuB;IAAvB,6FAAuB;;;IAvBlF,wEAAyE;IACrE,iMAWe;IAEf,2QAcc;IAClB,qEAAe;;;;IA3BN,0DAAiD;IAAjD,+GAAiD;;;IALlE,wEAA6D;IAEzD,yEAA+B;IAC3B,iLA6Be;IACnB,4DAAK;IACT,qEAAe;;;IA/BgC,0DAAkB;IAAlB,sFAAkB;;;IAJrE,wEAAiE;IAC7D,kKAkCe;IACnB,qEAAe;;;;;IAnCI,0DAAkC;IAAlC,gGAAkC;;;IAsCjD,wEAAc;IAAA,yGAA8C;IAAA,4DAAI;;;IAShE,6EAAmE;IAC/D,uDACJ;IAAA,4DAAS;;;IAFqC,0FAAoB;IAC9D,0DACJ;IADI,0FACJ;;;;IAOQ,qEAAuC;IACnC,0EAAiC;IAC7B,oEAAG;IAAA,uDAAkB;IAAA,4DAAI;IACzB,6EAA+D;IAAvD,8ZAAkC;IAAqB,8DAAG;IAAA,4DAAS;IAC/E,4DAAM;IACV,4DAAK;;;IAHM,0DAAkB;IAAlB,mFAAkB;;;IAJrC,wEAA0D;IACtD,yEAA0B;IACtB,6JAKK;IACT,4DAAK;IACT,qEAAe;;;IAPkB,0DAAY;IAAZ,kFAAY;;;IAHjD,wEAAyD;IACrD,kKASe;IACnB,qEAAe;;;;;IAVI,0DAA+B;IAA/B,4FAA+B;;;IAa9C,oEAAG;IAAA,0FAA+B;IAAA,4DAAI;;;;IAhF1D,wEAA4C;IACxC,yEAA0B;IACtB,yEAAoB;IAChB,yEAAyB;IACrB,wEAAiB;IAAA,oEAAG;IAAA,uDAAyB;;IAAA,4DAAI;IAAC,kEAAM;IAAA,4DAAK;IACjE,4DAAM;IACV,4DAAM;IAEN,yEAAiC;IAE7B,0EAAiC;IAC7B,yEAAuB;IAAA,0EAAc;IAAA,4DAAK;IAC1C,mJAoCe;;IAEf,6NAEc;IAElB,4DAAM;IAEN,0EAA6C;IACzC,yEAAuB;IAAA,0EAAc;IAAA,4DAAK;IAE1C,kFAAkC;IAC9B,wIAES;;IACb,4DAAS;IACT,8EAAgE;IAAxD,2ZAAmC;IAAqB,kEAAM;IAAA,4DAAS;IAE/E,mJAWe;;IAEf,6NAEc;IAElB,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,qEAAe;;;;IAnFqB,0DAAyB;IAAzB,8IAAyB;IAQ9B,0DAA+B;IAA/B,yJAA+B;IAgDhB,0DAAkB;IAAlB,qJAAkB;IAMjC,0DAA2B;IAA3B,sJAA2B;;ADpDnD,MAAM,oBAAoB;IAQ/B,YAEqB,WAAwB,EACxB,cAA8B,EAC9B,YAA0B,EAC1B,KAAqB;QAHrB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QAExC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAClE,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtE,CAAC;IAEM,WAAW,CAAC,OAAe;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IAEM,WAAW,CAAC,UAAkB;QACnC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC;aAC1D,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,UAAkB;QACtC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC;aAC/D,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvE,CAAC,CAAC;IACJ,CAAC;;wFA3CU,oBAAoB;oGAApB,oBAAoB;QCdjC,oIAuFe;;;QAvFA,4IAAoB;;;;;;;;;;;;;;ACEnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACF;;;;;;;;ICoBjC,0EAC6B;IACzB,yEAA+B;IAC3B,qEAAI;IACA,uDACJ;IAAA,4DAAK;IACT,4DAAM;IACN,0EAAsD;IAClD,oEAAG;IAAA,+DAAI;IAAA,4DAAI;IACf,4DAAM;IACN,0EAAmF;IAAzD,8WAA8B,wBAAwB,IAAE;IAC9E,oEAAG;IAAA,iEAAM;IAAA,4DAAI;IACjB,4DAAM;IACV,4DAAM;;;IAZF,6FAAwB;IAGhB,0DACJ;IADI,wFACJ;IAEoB,0DAA6B;IAA7B,2GAA6B;;;IA9BzE,wEAAkD;IAC9C,yEAA0B;IAGtB,yEAAoB;IAChB,yEAAyB;IACrB,wEAAiB;IAAA,uDAA4B;;IAAA,4DAAK;IACtD,4DAAM;IACV,4DAAM;IAEN,0EAAmB;IACf,qEAAI;IAAA,gEAAK;IAAA,4DAAK;IAEd,0EAAsC;IAElC,0EAAiF;IAC7E,0EAA+B;IAC3B,sEAAI;IACA,mEAA2B;IAC/B,4DAAK;IACT,4DAAM;IACV,4DAAM;IAEN,6HAaM;;IAEV,4DAAM;IACV,4DAAO;IACX,4DAAM;IACV,qEAAe;;;;IAnCkB,0DAA4B;IAA5B,iJAA4B;IAiBsB,2DAAiB;IAAjB,oJAAiB;;ADV7F,MAAM,cAAc;IAMzB,YAEmB,cAA8B,EAC9B,KAAqB,EACrB,WAAwB;QAFxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QAPpC,oBAAe,GAAG,IAAI,oDAAe,CAAU,IAAI,CAAC,CAAC;QASxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACpE,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,gEAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC;IAEM,YAAY;QACjB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAEM,UAAU,CAAC,MAAc;QAC9B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;aAClC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;;4EA9BU,cAAc;8FAAd,cAAc;QCb3B,6HAyCe;;;QAzCA,+IAAuB;;;;;;;;;;;;;;ACCtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;ICDzD,wEAAkD;IAC9C,yEAA0B;IAEtB,yEAAyB;IACrB,0EAAoE;IAAvC,8TAAqB;IAC9C,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IACpB,yEAAiB;IACb,sEAAgF;IACpF,4DAAM;IAEN,4EAAsG;IAAA,iEAAM;IAAA,4DAAS;IACzH,4DAAO;IACX,4DAAM;IACV,4DAAM;IACV,qEAAe;;;IAVG,0DAAsB;IAAtB,sFAAsB;IAM2C,0DAAkC;IAAlC,6FAAkC;;ADE9G,MAAM,gBAAgB;IAQ3B,YACmB,EAAe,EACf,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,WAAwB;QAJxB,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QAT3C,aAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAClC,CAAC,CAAC;QASD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAClE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjE,CAAC;IAED,MAAM;QACJ,IAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACxB,OAAO;SACR;QAED,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAErC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,IAAI,CAAC,SAAS,QAAQ,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;;gFAhCU,gBAAgB;gGAAhB,gBAAgB;QCZ7B,+HAce;;;QAdA,+IAAuB;;;;;;;;;;;;;;ACGtC;AAAA;AAAA;AAAA;AAAA;AAAwD;;;AAOjD,MAAM,WAAW;IAGtB,YAA6B,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAW,GAAG,qEAAW,CAAC,YAAY,QAAQ,CAAC;IAEtB,CAAC;IAE3C,UAAU,CAAC,IAAY,EAAE,SAAc;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IACtE,CAAC;IAEM,QAAQ,CAAC,MAAW,EAAE,IAAY;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAO,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC;IAEM,OAAO,CAAC,MAAW;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,EAAE,CAAC,CAAC;IACzD,CAAC;IAEM,iBAAiB,CAAC,MAAW,EAAE,UAAkB;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,IAAI,CAAC,OAAO,eAAe,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;IACtF,CAAC;IAEM,gBAAgB,CAAC,MAAW;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,YAAY,CAAC,CAAC;IAC/E,CAAC;IAEM,sBAAsB,CAAC,MAAW,EAAE,UAAkB;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,oBAAoB,UAAU,EAAE,CAAC,CAAC;IAC3F,CAAC;IAEM,UAAU,CAAC,MAAW;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,EAAE,CAAC,CAAC;IAC7D,CAAC;;sEA/BU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACkB;AACY;AACpB;AAEC;AACQ;AACE;;AAgB7D,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAPZ;YACP,4DAAY;YACZ,sEAAiB;YACjB,0DAAW;YACX,kEAAmB;SACpB;mIAEU,UAAU,mBAZnB,6EAAgB;QAChB,yFAAoB;QACpB,qEAAc;QACd,gFAAiB,aAGjB,4DAAY;QACZ,sEAAiB;QACjB,0DAAW;QACX,kEAAmB","file":"exam-exam-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddExamComponent } from './add-exam/add-exam.component';\nimport { ExamDetailsComponent } from './exam-details/exam-details.component';\nimport { ExamEditComponent } from './exam-edit/exam-edit.component';\nimport { ExamsComponent } from './exams/exams.component';\n\n // { path: ':id/exams/add-exam', component: AddExamComponent},\n    // { path: ':id/exams/:exam-id', component: ExamDetailsComponent},\n    // { path: ':id/exams', component: ExamsComponent },\n\n\nconst routes: Routes = [\n  {path: '', children: [\n    { path: 'add', component: AddExamComponent },\n    { path: ':exam-id/edit', component: ExamEditComponent },\n    { path: ':exam-id', component: ExamDetailsComponent },\n    { path: '', component: ExamsComponent, pathMatch: 'full' }\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExamRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { ExamService } from '../../services/exam.service';\n\n@Component({\n  selector: 'app-exam-edit',\n  templateUrl: './exam-edit.component.html',\n  styleUrls: ['./exam-edit.component.css']\n})\nexport class ExamEditComponent implements OnInit {\n\n  subjectId!: string | null;\n  examId!: string | null;\n  examEditForm = this.fb.group({\n    name: ['', [Validators.required]]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly examService: ExamService\n  ) { \n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n    this.examId = this.route.snapshot.paramMap.get('exam-id');\n  }\n\n  ngOnInit(): void {\n    this.examService.getExam(this.examId)\n    .pipe(take(1))\n    .subscribe((exam) => {\n      const { name } = exam;\n      this.examEditForm.patchValue({ name });\n    })\n  }\n\n  submit(): void {\n    if(this.examEditForm.invalid) {\n      return;\n    }\n\n    const { name } = this.examEditForm.value;\n\n    this.examService.editExam(this.examId, name)\n    .pipe(take(1))\n    .subscribe((data) => {\n      this.router.navigate([`/teacher/subjects/${this.subjectId}/exams`]);\n    });\n  }\n\n}\n","<div class=\"form-wrapper\">\n\n    <div class=\"center-form\">\n        <form [formGroup]=\"examEditForm\" (ngSubmit)=\"submit()\" class=\"form-box\">\n            <h1>Edit exam</h1>\n            <div id=\"inputs\">\n                <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" class=\"blue-input\">\n            </div>\n\n            <button class=\"hover form-blue-button bottom-button\" type=\"submit\"\n                [disabled]=\"this.examEditForm.invalid\">Edit</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, pipe } from 'rxjs';\nimport { take, tap } from 'rxjs/operators';\nimport { Exam, Question, Topic } from 'src/app/core/models';\nimport { ExamService } from '../../services/exam.service';\nimport { SubjectService } from '../../services/subject.service';\nimport { TopicService } from '../../services/topic.service';\n\n@Component({\n  selector: 'app-exam-details',\n  templateUrl: './exam-details.component.html',\n  styleUrls: ['./exam-details.component.css']\n})\nexport class ExamDetailsComponent implements OnInit {\n  public exam$!: Observable<Exam>;\n  public topics$!: Observable<Array<Topic>>;\n  public questions$!: Observable<Array<Question>>;\n  public examQuestions$!: Observable<Array<Question>>;\n  public examId: string | null;\n  public subjectId: string | null;\n\n  constructor\n    (\n      private readonly examService: ExamService,\n      private readonly subjectService: SubjectService,\n      private readonly topicService: TopicService,\n      private readonly route: ActivatedRoute\n    ) {\n    this.examId = this.route.snapshot.paramMap.get('exam-id');\n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  public ngOnInit(): void {\n    this.exam$ = this.examService.getExam(this.examId);\n    this.examQuestions$ = this.examService.getExamQuestions(this.examId);\n    this.topics$ = this.subjectService.getSubjectTopics(this.subjectId);\n  }\n\n  public selectTopic(topicId: string): void {\n    this.questions$ = this.topicService.getTopicQuestions(topicId);\n  }\n\n  public addQuestion(questionId: number): void {\n    this.examService.addQuestionToExam(this.examId, questionId)\n    .pipe(take(1))\n    .subscribe(() => {\n      this.examQuestions$ = this.examService.getExamQuestions(this.examId);\n    });\n  }\n\n  public removeQuestion(questionId: number): void {\n    this.examService.removeQuestionFromExam(this.examId, questionId)\n    .pipe(take(1))\n    .subscribe(() => {\n      this.examQuestions$ = this.examService.getExamQuestions(this.examId);\n    })\n  }\n\n}\n","<ng-container *ngIf=\"exam$ | async as exam\">\n    <div class=\"page-wrapper\">\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <h2 id=\"heading\"><b>{{exam.name | uppercase}}</b> - Exam</h2>\n            </div>\n        </nav>\n\n        <div class=\"half-flex-container\">\n\n            <div class=\"half-flex-item left\">\n                <h2 class=\"subheading\">Exam questions</h2>\n                <ng-container *ngIf=\"(examQuestions$ | async) as examQuestions;\">\n                    <ng-container *ngIf=\"examQuestions.length !== 0; else empty\">\n\n                        <ul class=\"exam-question-list\">\n                            <ng-container *ngFor=\"let examQuestion of examQuestions; let i = index;\">\n                                <ng-container\n                                    *ngIf=\"examQuestion.questionType.type === 'open'; else closedQuestionTemplate\">\n                                    <li class=\"exam-question\">\n                                        <div class=\"exam-question-title\">\n                                            <h2>{{i + 1}}. {{examQuestion.title}}</h2>\n                                            <button (click)=\"removeQuestion(examQuestion.id)\"\n                                                class=\"remove-btn\">Remove</button>\n                                        </div>\n                                        <h3>({{examQuestion.maxPoints}} Points)</h3>\n                                        <textarea placeholder=\"Open question\" class=\"exam-textarea\" disabled></textarea>\n                                    </li>\n                                </ng-container>\n\n                                <ng-template #closedQuestionTemplate>\n                                    <li class=\"exam-question\">\n                                        <div class=\"exam-question-title\">\n                                            <h2>{{i + 1}}. {{examQuestion.title}}</h2>\n                                            <button (click)=\"removeQuestion(examQuestion.id)\"\n                                                class=\"remove-btn\">Remove</button>\n                                        </div>\n                                        <h3>({{examQuestion.maxPoints}} Points)</h3>\n                                        <ul class=\"exam-choice-list\">\n                                            <li class=\"exam-choice\" *ngFor=\"let choice of examQuestion.choices\">\n                                                <p>{{choice.text}} <i>({{choice.isCorrect}})</i></p>\n                                            </li>\n                                        </ul>\n                                    </li>\n                                </ng-template>\n                            </ng-container>\n                        </ul>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #empty>\n                    <p id=\"empty\">No questions have been added to this exam yet.</p>\n                </ng-template>\n\n            </div>\n\n            <div class=\"half-flex-item right box-shadow\">\n                <h2 class=\"subheading\">Choose a topic</h2>\n\n                <select id=\"topic-select\" #select>\n                    <option *ngFor=\"let topic of topics$ | async\" value=\"{{topic.id}}\">\n                        {{topic.name}}\n                    </option>\n                </select>\n                <button (click)=\"selectTopic(select.value)\" class=\"blue-button\">Select</button>\n\n                <ng-container *ngIf=\"(questions$ | async) as questions;\">\n                    <ng-container *ngIf=\"questions.length !== 0;  else empty\">\n                        <ul class=\"question-list\">\n                            <li *ngFor=\"let question of questions\">\n                                <div class=\"exam-question-title\">\n                                    <p>{{question.title}}</p>\n                                    <button (click)=\"addQuestion(question.id)\" class=\"blue-button\">Add</button>\n                                </div>\n                            </li>\n                        </ul>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #empty>\n                    <p>This topic has no questions yet</p>\n                </ng-template>\n\n            </div>\n\n        </div>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { Exam, Subject } from 'src/app/core/models';\nimport { ExamService } from '../../services/exam.service';\nimport { SubjectService } from '../../services/subject.service';\n\n@Component({\n  selector: 'app-exams',\n  templateUrl: './exams.component.html',\n  styleUrls: ['./exams.component.css']\n})\nexport class ExamsComponent implements OnInit {\n  public subject$!: Observable<Subject>;\n  public exams$!: Observable<Array<Exam>>;\n  public refreshedExams$ = new BehaviorSubject<boolean>(true);\n  public subjectId: string | null;\n\n  constructor\n  (\n    private readonly subjectService: SubjectService,\n    private readonly route: ActivatedRoute,\n    private readonly examService: ExamService\n  ) { \n      this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  public ngOnInit(): void {\n    this.subject$ = this.subjectService.getSubject(this.subjectId);\n    this.exams$! = this.refreshedExams$.pipe(switchMap(_ => this.subjectService.getSubjectExams(this.subjectId)));\n  }\n\n  public refreshExams() {\n    this.refreshedExams$.next(true);\n  }\n  \n  public deleteExam(examId: number): void {\n    this.examService.deleteExam(examId)\n    .pipe(take(1))\n    .subscribe(() => {\n      this.refreshExams();\n    });\n  }\n  \n}\n","<ng-container *ngIf=\"subject$ | async as subject\">\n    <div class=\"page-wrapper\">\n\n\n        <nav class=\"navbar\">\n            <div class=\"heading-nav\">\n                <h2 id=\"heading\">{{subject.name | uppercase}}</h2>\n            </div>\n        </nav>\n\n        <main class=\"page\">\n            <h2>Exams</h2>\n\n            <div class=\"rectangle-flex-container\">\n\n                <div class=\"rectangle-flex-item hover box-shadow\" id=\"add-exam\" routerLink=\"add\">\n                    <div class=\"rectangle-content\">\n                        <h3>\n                            <i class=\"fas fa-plus\"></i>\n                        </h3>\n                    </div>\n                </div>\n\n                <div class=\"rectangle-flex-item hover box-shadow\" *ngFor=\"let exam of exams$ | async\"\n                    routerLink=\"{{exam.id}}\">\n                    <div class=\"rectangle-content\">\n                        <h3>\n                            {{exam.name}}\n                        </h3>\n                    </div>\n                    <div class=\"edit-strip\" routerLink=\"{{exam.id}}/edit\">\n                        <p>Edit</p>\n                    </div>\n                    <div class=\"delete-strip\" (click)=\"deleteExam(exam.id); $event.stopPropagation();\">\n                        <p>Delete</p>\n                    </div>\n                </div>\n\n            </div>\n        </main>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ExamService } from '../../services/exam.service';\nimport { SubjectService } from '../../services/subject.service';\n\n@Component({\n  selector: 'app-add-exam',\n  templateUrl: './add-exam.component.html',\n  styleUrls: ['./add-exam.component.css']\n})\nexport class AddExamComponent implements OnInit {\n\n  subjectId!: string | null;\n  subject$!: Observable<any>;\n  examForm = this.fb.group({\n    name: ['', [Validators.required]]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly subjectService: SubjectService,\n    private readonly examService: ExamService\n  ) { \n    this.subjectId = this.route.snapshot.paramMap.get('subject-id');\n  }\n\n  ngOnInit(): void {\n    this.subject$ = this.subjectService.getSubject(this.subjectId);\n  }\n\n  submit(): void {\n    if(this.examForm.invalid) {\n      return;\n    }\n\n    const { name } = this.examForm.value;\n\n    this.examService.createExam(name, this.subjectId).subscribe(() => {\n      this.router.navigate([`/teacher/subjects/${this.subjectId}/exams`]);\n    });\n  }\n\n}\n","<ng-container *ngIf=\"subject$ | async as subject\">\n    <div class=\"form-wrapper\">\n\n        <div class=\"center-form\">\n            <form [formGroup]=\"examForm\" (ngSubmit)=\"submit()\" class=\"form-box\">\n                <h1>Create exam</h1>\n                <div id=\"inputs\">\n                    <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" class=\"blue-input\">\n                </div>\n\n                <button class=\"hover form-blue-button bottom-button\" type=\"submit\" [disabled]=\"this.examForm.invalid\">Create</button>\n            </form>\n        </div>\n    </div>\n</ng-container>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from 'src/app/core/app-settings';\nimport { Exam, Question } from 'src/app/core/models';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamService {\n  private readonly baseUrl: string = `${AppSettings.API_ENDPOINT}/exams`;\n\n  constructor(private readonly http: HttpClient) { }\n\n  public createExam(name: string, subjectId: any): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}`, { name, subjectId });\n  }\n\n  public editExam(examId: any, name: string): Observable<void> {\n    return this.http.patch<void>(`${this.baseUrl}/${examId}`, { name });\n  }\n \n  public getExam(examId: any): Observable<Exam> {\n    return this.http.get<any>(`${this.baseUrl}/${examId}`);\n  }\n\n  public addQuestionToExam(examId: any, questionId: number): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/add-question`, { examId, questionId });\n  }\n\n  public getExamQuestions(examId: any): Observable<Array<Question>> {\n    return this.http.get<Array<Question>>(`${this.baseUrl}/${examId}/questions`);\n  }\n\n  public removeQuestionFromExam(examId: any, questionId: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${examId}/remove-question/${questionId}`);\n  }\n\n  public deleteExam(examId: any): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${examId}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddExamComponent } from './add-exam/add-exam.component';\nimport { ExamDetailsComponent } from './exam-details/exam-details.component';\nimport { ExamsComponent } from './exams/exams.component';\n\nimport { ExamRoutingModule } from './exam-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ExamEditComponent } from './exam-edit/exam-edit.component';\n\n@NgModule({\n  declarations: [\n    AddExamComponent,\n    ExamDetailsComponent,\n    ExamsComponent,\n    ExamEditComponent\n  ],\n  imports: [\n    CommonModule,\n    ExamRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class ExamModule { }\n"],"sourceRoot":"webpack:///"}